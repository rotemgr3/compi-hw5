@var_23 = constant [116 x i8] c"Your mind is a powerful thing. When you fill it with positive thoughts, your life will start to change. – Unknown\00"
@var_28 = constant [127 x i8] c"Start by doing what’s necessary; then do what’s possible; and suddenly you are doing the impossible. – Francis of Assisi\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @Func(i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 3, 0
%var_4 = icmp sgt i32 %0, %var_3
br i1 %var_4, label %label_0, label %label_1
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_5 = phi i32 [ 1, %label_0], [0, %label_1]
ret i32 %var_5
ret i32 0 }
define void @maxTestsTestAndOrWithFunc(){
%var_6 = alloca i32, i32 50
%var_7 = add i32 3, 0
%var_8 = call i32 @Func(i32 %var_7)
%var_9 = icmp eq i32 0, %var_8
br i1 %var_9, label %label_5, label %label_3
br label %label_3
label_3:
br label %label_4
br label %label_4
label_4:
br label %label_6
label_5:
br label %label_6
label_6:
%var_10 = phi i32 [ 1, %label_4], [0, %label_5]
%var_11 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_10, i32* %var_11
%var_12 = add i32 5, 0
%var_13 = call i32 @Func(i32 %var_12)
%var_14 = icmp eq i32 0, %var_13
br i1 %var_14, label %label_7, label %label_8
br label %label_7
label_7:
%var_15 = add i32 5, 0
%var_16 = add i32 4, 0
%var_17 = icmp slt i32 %var_15, %var_16
br i1 %var_17, label %label_8, label %label_9
br label %label_8
label_8:
br label %label_10
label_9:
br label %label_10
label_10:
%var_18 = phi i32 [ 1, %label_8], [0, %label_9]
%var_19 = getelementptr i32, i32* %var_6, i32 1
store i32 %var_18, i32* %var_19
%var_20 = getelementptr i32, i32* %var_6, i32 0
%var_21 = load i32, i32* %var_20
%var_22 = icmp eq i32 0, %var_21
br i1 %var_22, label %label_11, label %label_12
br label %label_11
label_11:
%var_23.ptr = getelementptr [116 x i8], [116 x i8]* @var_23, i32 0, i32 0
call void @print(i8* %var_23.ptr)
br label %label_12
label_12:
%var_25 = getelementptr i32, i32* %var_6, i32 1
%var_26 = load i32, i32* %var_25
%var_27 = icmp eq i32 0, %var_26
br i1 %var_27, label %label_14, label %label_13
br label %label_13
label_13:
%var_28.ptr = getelementptr [127 x i8], [127 x i8]* @var_28, i32 0, i32 0
call void @print(i8* %var_28.ptr)
br label %label_14
label_14:
ret void }
define void @main(){
%var_30 = alloca i32, i32 50
call void @maxTestsTestAndOrWithFunc()
ret void }
