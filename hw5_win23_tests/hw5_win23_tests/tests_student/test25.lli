@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @Func(i32){
%var_2 = alloca i32, i32 50
call void @printi(i32 %0)
ret void }
define void @maxTestsStressTestBasicFunc(){
%var_4 = alloca i32, i32 50
%var_5 = add i32 666, 0
call void @Func(i32 %var_5)
%var_7 = add i32 666, 0
call void @Func(i32 %var_7)
%var_9 = add i32 666, 0
call void @Func(i32 %var_9)
%var_11 = add i32 666, 0
call void @Func(i32 %var_11)
%var_13 = add i32 666, 0
call void @Func(i32 %var_13)
%var_15 = add i32 666, 0
call void @Func(i32 %var_15)
%var_17 = add i32 666, 0
call void @Func(i32 %var_17)
%var_19 = add i32 666, 0
call void @Func(i32 %var_19)
%var_21 = add i32 666, 0
call void @Func(i32 %var_21)
%var_23 = add i32 666, 0
call void @Func(i32 %var_23)
%var_25 = add i32 666, 0
call void @Func(i32 %var_25)
%var_27 = add i32 666, 0
call void @Func(i32 %var_27)
%var_29 = add i32 666, 0
call void @Func(i32 %var_29)
%var_31 = add i32 666, 0
call void @Func(i32 %var_31)
%var_33 = add i32 666, 0
call void @Func(i32 %var_33)
%var_35 = add i32 666, 0
call void @Func(i32 %var_35)
%var_37 = add i32 666, 0
call void @Func(i32 %var_37)
%var_39 = add i32 666, 0
call void @Func(i32 %var_39)
%var_41 = add i32 666, 0
call void @Func(i32 %var_41)
%var_43 = add i32 666, 0
call void @Func(i32 %var_43)
%var_45 = add i32 666, 0
call void @Func(i32 %var_45)
%var_47 = add i32 666, 0
call void @Func(i32 %var_47)
%var_49 = add i32 666, 0
call void @Func(i32 %var_49)
%var_51 = add i32 666, 0
call void @Func(i32 %var_51)
%var_53 = add i32 666, 0
call void @Func(i32 %var_53)
ret void }
define void @main(){
%var_55 = alloca i32, i32 50
call void @maxTestsStressTestBasicFunc()
ret void }
