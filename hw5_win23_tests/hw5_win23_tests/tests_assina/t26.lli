@var_3 = constant [46 x i8] c"just checking order of computation real quick\00"
@var_17 = constant [41 x i8] c"Did you get 8? because that's the answer\00"
@var_19 = constant [13 x i8] c"No! you got:\00"
@var_24 = constant [11 x i8] c"OK bye now\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [46 x i8], [46 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
%var_5 = add i32 1, 0
%var_6 = add i32 2, 0
%var_7 = add i32 3, 0
%var_8 = mul i32 %var_6, %var_7
%var_9 = add i32 2, 0
call void @check_division(i32 %var_9)
%var_10 = sdiv i32 %var_8, %var_9
%var_11 = add i32 %var_5, %var_10
%var_12 = add i32 5, 0
%var_13 = add i32 %var_11, %var_12
%var_14 = add i32 1, 0
%var_15 = sub i32 %var_13, %var_14
%var_16 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_15, i32* %var_16
%var_17.ptr = getelementptr [41 x i8], [41 x i8]* @var_17, i32 0, i32 0
call void @print(i8* %var_17.ptr)
%var_19.ptr = getelementptr [13 x i8], [13 x i8]* @var_19, i32 0, i32 0
call void @print(i8* %var_19.ptr)
%var_21 = getelementptr i32, i32* %var_2, i32 0
%var_22 = load i32, i32* %var_21
call void @printi(i32 %var_22)
%var_24.ptr = getelementptr [11 x i8], [11 x i8]* @var_24, i32 0, i32 0
call void @print(i8* %var_24.ptr)
ret void }
