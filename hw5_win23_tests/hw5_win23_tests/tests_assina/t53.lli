@var_33 = constant [30 x i8] c"Should be seeing 90 (I think)\00"
@var_39 = constant [29 x i8] c"Should be seeing 8 (I think)\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @soGood(){
%var_2 = alloca i32, i32 50
ret void
ret void
ret void
ret void
ret void
ret void }
define i32 @nest1(i32, i32, i32){
%var_3 = alloca i32, i32 50
%var_4 = add i32 %0, %1
%var_5 = add i32 %var_4, %2
ret i32 %var_5
ret i32 0 }
define i32 @nest2(i32, i32){
%var_6 = alloca i32, i32 50
%var_7 = add i32 0, 0
%var_8 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_7, i32* %var_8
%var_9 = add i32 %0, %1
%var_10 = and i32 255, %var_9
%var_11 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_10, i32* %var_11
%var_12 = getelementptr i32, i32* %var_6, i32 0
%var_13 = load i32, i32* %var_12
%var_14 = getelementptr i32, i32* %var_6, i32 0
%var_15 = load i32, i32* %var_14
%var_16 = getelementptr i32, i32* %var_6, i32 0
%var_17 = load i32, i32* %var_16
%var_18 = call  i32 @nest1(i32 %var_13, i32 %var_15, i32 %var_17)
ret i32 %var_18
ret i32 0 }
define i32 @nest3(i32, i32){
%var_19 = alloca i32, i32 50
%var_20 = add i32 2, 0
call void @check_division(i32 %var_20)
%var_21 = sdiv i32 %0, %var_20
%var_22 = add i32 3, 0
call void @check_division(i32 %var_22)
%var_23 = sdiv i32 %1, %var_22
%var_24 = call  i32 @nest2(i32 %var_21, i32 %var_23)
%var_25 = add i32 2, 0
call void @check_division(i32 %var_25)
%var_26 = sdiv i32 %1, %var_25
%var_27 = add i32 3, 0
call void @check_division(i32 %var_27)
%var_28 = sdiv i32 %0, %var_27
%var_29 = call  i32 @nest2(i32 %var_26, i32 %var_28)
%var_30 = add i32 %var_24, %var_29
%var_31 = and i32 255, %var_30
ret i32 %var_31
ret i32 0 }
define void @main(){
%var_32 = alloca i32, i32 50
%var_33.ptr = getelementptr [30 x i8], [30 x i8]* @var_33, i32 0, i32 0
call void @print(i8* %var_33.ptr)
%var_35 = add i32 6, 0
%var_36 = add i32 30, 0
%var_37 = call  i32 @nest3(i32 %var_35, i32 %var_36)
call void @printi(i32 %var_37)
%var_39.ptr = getelementptr [29 x i8], [29 x i8]* @var_39, i32 0, i32 0
call void @print(i8* %var_39.ptr)
%var_41 = add i32 71, 0
%var_42 = add i32 37, 0
%var_43 = call  i32 @nest3(i32 %var_41, i32 %var_42)
call void @printi(i32 %var_43)
ret void }
