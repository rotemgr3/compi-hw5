@var_5 = constant [12 x i8] c"original x:\00"
@var_8 = constant [12 x i8] c"original w:\00"
@var_11 = constant [15 x i8] c"--n-- 1st loop\00"
@var_20 = constant [15 x i8] c"--x-- 2nd loop\00"
@var_36 = constant [15 x i8] c"--w-- 1st loop\00"
@var_50 = constant [18 x i8] c"Loop in loop test\00"
@var_72 = constant [6 x i8] c"ERROR\00"
@var_84 = constant [6 x i8] c"ERROR\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @loopLoopLoopLoopLoop(i32, i32, i32, i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = getelementptr i32, i32* %var_2, i32 0
store i32 %0, i32* %var_3
%var_4 = getelementptr i32, i32* %var_2, i32 1
store i32 %1, i32* %var_4
%var_5.ptr = getelementptr [12 x i8], [12 x i8]* @var_5, i32 0, i32 0
call void @print(i8* %var_5.ptr)
call void @printi(i32 %1)
%var_8.ptr = getelementptr [12 x i8], [12 x i8]* @var_8, i32 0, i32 0
call void @print(i8* %var_8.ptr)
call void @printi(i32 %0)
%var_11.ptr = getelementptr [15 x i8], [15 x i8]* @var_11, i32 0, i32 0
call void @print(i8* %var_11.ptr)
call void @printi(i32 %4)
br label %label_0
label_0:
%var_14 = getelementptr i32, i32* %var_2, i32 0
%var_15 = load i32, i32* %var_14
%var_16 = icmp slt i32 %var_15, %4
br i1 %var_16, label %label_1, label %label_5
br label %label_1
label_1:
br label %label_2
label_2:
%var_17 = getelementptr i32, i32* %var_2, i32 1
%var_18 = load i32, i32* %var_17
%var_19 = icmp slt i32 %var_18, %4
br i1 %var_19, label %label_3, label %label_4
br label %label_3
label_3:
%var_20.ptr = getelementptr [15 x i8], [15 x i8]* @var_20, i32 0, i32 0
call void @print(i8* %var_20.ptr)
%var_22 = getelementptr i32, i32* %var_2, i32 1
%var_23 = load i32, i32* %var_22
call void @printi(i32 %var_23)
%var_25 = getelementptr i32, i32* %var_2, i32 1
%var_26 = load i32, i32* %var_25
%var_27 = add i32 1, 0
%var_28 = add i32 %var_26, %var_27
%var_29 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_28, i32* %var_29
br label %label_2
%var_30 = getelementptr i32, i32* %var_2, i32 1
%var_31 = load i32, i32* %var_30
%var_32 = add i32 1, 0
%var_33 = add i32 %var_31, %var_32
%var_34 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_33, i32* %var_34
br label %label_2
br label %label_4
label_4:
%var_35 = getelementptr i32, i32* %var_2, i32 1
store i32 %1, i32* %var_35
%var_36.ptr = getelementptr [15 x i8], [15 x i8]* @var_36, i32 0, i32 0
call void @print(i8* %var_36.ptr)
%var_38 = getelementptr i32, i32* %var_2, i32 0
%var_39 = load i32, i32* %var_38
%var_40 = add i32 1, 0
%var_41 = add i32 %var_39, %var_40
%var_42 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_41, i32* %var_42
%var_43 = getelementptr i32, i32* %var_2, i32 0
%var_44 = load i32, i32* %var_43
call void @printi(i32 %var_44)
br label %label_0
br label %label_5
label_5:
%var_46 = add i32 0, 0
%var_47 = add i32 1, 0
%var_48 = sub i32 %var_46, %var_47
ret i32 %var_48
ret i32 0 }
define void @main(){
%var_49 = alloca i32, i32 50
%var_50.ptr = getelementptr [18 x i8], [18 x i8]* @var_50, i32 0, i32 0
call void @print(i8* %var_50.ptr)
%var_52 = add i32 1, 0
%var_53 = add i32 1, 0
%var_54 = add i32 1, 0
%var_55 = add i32 1, 0
%var_56 = add i32 3, 0
%var_57 = call  i32 @loopLoopLoopLoopLoop(i32 %var_52, i32 %var_53, i32 %var_54, i32 %var_55, i32 %var_56)
%var_58 = getelementptr i32, i32* %var_49, i32 0
store i32 %var_57, i32* %var_58
%var_59 = getelementptr i32, i32* %var_49, i32 0
%var_60 = load i32, i32* %var_59
call void @printi(i32 %var_60)
%var_62 = add i32 1, 0
%var_63 = add i32 1, 0
%var_64 = add i32 1, 0
%var_65 = add i32 1, 0
%var_66 = add i32 2, 0
%var_67 = call  i32 @loopLoopLoopLoopLoop(i32 %var_62, i32 %var_63, i32 %var_64, i32 %var_65, i32 %var_66)
%var_68 = add i32 2, 0
%var_69 = add i32 3, 0
%var_70 = sub i32 %var_68, %var_69
%var_71 = icmp ne i32 %var_67, %var_70
br i1 %var_71, label %label_6, label %label_7
br label %label_6
label_6:
%var_72.ptr = getelementptr [6 x i8], [6 x i8]* @var_72, i32 0, i32 0
call void @print(i8* %var_72.ptr)
ret void
br label %label_7
label_7:
%var_74 = add i32 2, 0
%var_75 = add i32 3, 0
%var_76 = add i32 4, 0
%var_77 = add i32 1, 0
%var_78 = add i32 10, 0
%var_79 = call  i32 @loopLoopLoopLoopLoop(i32 %var_74, i32 %var_75, i32 %var_76, i32 %var_77, i32 %var_78)
%var_80 = add i32 2, 0
%var_81 = add i32 3, 0
%var_82 = sub i32 %var_80, %var_81
%var_83 = icmp ne i32 %var_79, %var_82
br i1 %var_83, label %label_8, label %label_9
br label %label_8
label_8:
%var_84.ptr = getelementptr [6 x i8], [6 x i8]* @var_84, i32 0, i32 0
call void @print(i8* %var_84.ptr)
ret void
br label %label_9
label_9:
ret void }
