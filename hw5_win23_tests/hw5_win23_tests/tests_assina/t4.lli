@var_7 = constant [28 x i8] c"X should be 1, but you got:\00"
@var_17 = constant [35 x i8] c"Y should be -4 (x-5), but you got:\00"
@var_28 = constant [17 x i8] c"fucking loser...\00"
@var_30 = constant [9 x i8] c"I'M DONE\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3 = add i32 4, 0
%var_4 = add i32 3, 0
%var_5 = sub i32 %var_3, %var_4
%var_6 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_5, i32* %var_6
%var_7.ptr = getelementptr [28 x i8], [28 x i8]* @var_7, i32 0, i32 0
call void @print(i8* %var_7.ptr)
%var_9 = getelementptr i32, i32* %var_2, i32 0
%var_10 = load i32, i32* %var_9
call void @printi(i32 %var_10)
%var_12 = getelementptr i32, i32* %var_2, i32 0
%var_13 = load i32, i32* %var_12
%var_14 = add i32 5, 0
%var_15 = sub i32 %var_13, %var_14
%var_16 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_15, i32* %var_16
%var_17.ptr = getelementptr [35 x i8], [35 x i8]* @var_17, i32 0, i32 0
call void @print(i8* %var_17.ptr)
%var_19 = getelementptr i32, i32* %var_2, i32 1
%var_20 = load i32, i32* %var_19
call void @printi(i32 %var_20)
%var_22 = getelementptr i32, i32* %var_2, i32 1
%var_23 = load i32, i32* %var_22
%var_24 = add i32 0, 0
%var_25 = add i32 4, 0
%var_26 = sub i32 %var_24, %var_25
%var_27 = icmp ne i32 %var_23, %var_26
br i1 %var_27, label %label_0, label %label_1
br label %label_0
label_0:
%var_28.ptr = getelementptr [17 x i8], [17 x i8]* @var_28, i32 0, i32 0
call void @print(i8* %var_28.ptr)
br label %label_2
br label %label_1
label_1:
%var_30.ptr = getelementptr [9 x i8], [9 x i8]* @var_30, i32 0, i32 0
call void @print(i8* %var_30.ptr)
br label %label_2
label_2:
ret void }
