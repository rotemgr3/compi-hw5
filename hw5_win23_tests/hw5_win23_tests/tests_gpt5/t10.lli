@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @isDivisible(i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = getelementptr i32, i32* %var_2, i32 0
store i32 %0, i32* %var_3
%var_4 = add i32 0, 0
%var_5 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_4, i32* %var_5
br label %label_0
label_0:
%var_6 = getelementptr i32, i32* %var_2, i32 0
%var_7 = load i32, i32* %var_6
%var_8 = icmp sge i32 %var_7, %1
br i1 %var_8, label %label_1, label %label_2
br label %label_1
label_1:
%var_9 = getelementptr i32, i32* %var_2, i32 0
%var_10 = load i32, i32* %var_9
%var_11 = sub i32 %var_10, %1
%var_12 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_11, i32* %var_12
%var_13 = getelementptr i32, i32* %var_2, i32 1
%var_14 = load i32, i32* %var_13
%var_15 = add i32 1, 0
%var_16 = add i32 %var_14, %var_15
%var_17 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_16, i32* %var_17
br label %label_0
br label %label_2
label_2:
%var_18 = getelementptr i32, i32* %var_2, i32 0
%var_19 = load i32, i32* %var_18
%var_20 = add i32 0, 0
%var_21 = icmp eq i32 %var_19, %var_20
br i1 %var_21, label %label_3, label %label_4
br label %label_3
label_3:
br label %label_5
label_4:
br label %label_5
label_5:
%var_22 = phi i32 [ 1, %label_3], [0, %label_4]
ret i32 %var_22
ret i32 0 }
define i32 @isPrime(i32){
%var_23 = alloca i32, i32 50
br label %label_6
br label %label_6
label_6:
br label %label_8
label_7:
br label %label_8
label_8:
%var_24 = phi i32 [ 1, %label_6], [0, %label_7]
%var_25 = getelementptr i32, i32* %var_23, i32 0
store i32 %var_24, i32* %var_25
%var_26 = add i32 2, 0
%var_27 = getelementptr i32, i32* %var_23, i32 1
store i32 %var_26, i32* %var_27
br label %label_9
label_9:
%var_28 = getelementptr i32, i32* %var_23, i32 1
%var_29 = load i32, i32* %var_28
%var_30 = icmp slt i32 %var_29, %0
br i1 %var_30, label %label_10, label %label_16
br label %label_10
label_10:
%var_31 = getelementptr i32, i32* %var_23, i32 1
%var_32 = load i32, i32* %var_31
%var_33 = call i32 @isDivisible(i32 %0, i32 %var_32)
%var_34 = icmp eq i32 0, %var_33
br i1 %var_34, label %label_15, label %label_11
br label %label_11
label_11:
br label %label_13
br label %label_12
label_12:
br label %label_14
label_13:
br label %label_14
label_14:
%var_35 = phi i32 [ 1, %label_12], [0, %label_13]
%var_36 = getelementptr i32, i32* %var_23, i32 0
store i32 %var_35, i32* %var_36
br label %label_16
br label %label_15
label_15:
%var_37 = getelementptr i32, i32* %var_23, i32 1
%var_38 = load i32, i32* %var_37
%var_39 = add i32 1, 0
%var_40 = add i32 %var_38, %var_39
%var_41 = getelementptr i32, i32* %var_23, i32 1
store i32 %var_40, i32* %var_41
br label %label_9
br label %label_16
label_16:
%var_42 = getelementptr i32, i32* %var_23, i32 0
%var_43 = load i32, i32* %var_42
%var_44 = icmp eq i32 0, %var_43
br i1 %var_44, label %label_18, label %label_17
%var_45 = getelementptr i32, i32* %var_23, i32 0
%var_46 = load i32, i32* %var_45
br label %label_17
label_17:
br label %label_19
label_18:
br label %label_19
label_19:
%var_47 = phi i32 [ 1, %label_17], [0, %label_18]
ret i32 %var_47
ret i32 0 }
define void @main(){
%var_48 = alloca i32, i32 50
%var_49 = add i32 200, 0
%var_50 = getelementptr i32, i32* %var_48, i32 0
store i32 %var_49, i32* %var_50
%var_51 = getelementptr i32, i32* %var_48, i32 0
%var_52 = load i32, i32* %var_51
%var_53 = getelementptr i32, i32* %var_48, i32 1
store i32 %var_52, i32* %var_53
%var_54 = add i32 0, 0
%var_55 = getelementptr i32, i32* %var_48, i32 2
store i32 %var_54, i32* %var_55
%var_56 = add i32 2, 0
%var_57 = getelementptr i32, i32* %var_48, i32 3
store i32 %var_56, i32* %var_57
br label %label_20
label_20:
%var_58 = getelementptr i32, i32* %var_48, i32 3
%var_59 = load i32, i32* %var_58
%var_60 = getelementptr i32, i32* %var_48, i32 0
%var_61 = load i32, i32* %var_60
%var_62 = icmp slt i32 %var_59, %var_61
br i1 %var_62, label %label_21, label %label_26
br label %label_21
label_21:
%var_63 = getelementptr i32, i32* %var_48, i32 0
%var_64 = load i32, i32* %var_63
%var_65 = getelementptr i32, i32* %var_48, i32 3
%var_66 = load i32, i32* %var_65
%var_67 = call i32 @isDivisible(i32 %var_64, i32 %var_66)
%var_68 = icmp eq i32 0, %var_67
br i1 %var_68, label %label_25, label %label_22
br label %label_22
label_22:
%var_69 = getelementptr i32, i32* %var_48, i32 3
%var_70 = load i32, i32* %var_69
%var_71 = call i32 @isPrime(i32 %var_70)
%var_72 = icmp eq i32 0, %var_71
br i1 %var_72, label %label_24, label %label_23
br label %label_23
label_23:
%var_73 = getelementptr i32, i32* %var_48, i32 3
%var_74 = load i32, i32* %var_73
%var_75 = getelementptr i32, i32* %var_48, i32 2
store i32 %var_74, i32* %var_75
%var_76 = getelementptr i32, i32* %var_48, i32 3
%var_77 = load i32, i32* %var_76
call void @printi(i32 %var_77)
br label %label_24
label_24:
br label %label_25
label_25:
%var_79 = getelementptr i32, i32* %var_48, i32 3
%var_80 = load i32, i32* %var_79
%var_81 = add i32 1, 0
%var_82 = add i32 %var_80, %var_81
%var_83 = getelementptr i32, i32* %var_48, i32 3
store i32 %var_82, i32* %var_83
br label %label_20
br label %label_26
label_26:
ret void
ret void }
