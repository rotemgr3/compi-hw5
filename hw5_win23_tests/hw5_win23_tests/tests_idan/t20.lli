@var_32 = constant [20 x i8] c"shouldn't get here1\00"
@var_36 = constant [20 x i8] c"shouldn't get here2\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @func(i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 2, 0
%var_4 = mul i32 %var_3, %1
%var_5 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_4, i32* %var_5
%var_6 = getelementptr i32, i32* %var_2, i32 0
%var_7 = load i32, i32* %var_6
%var_8 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_7, i32* %var_8
%var_9 = getelementptr i32, i32* %var_2, i32 1
%var_10 = load i32, i32* %var_9
%var_11 = add i32 5, 0
%var_12 = mul i32 %var_10, %var_11
ret i32 %var_12
ret i32 0 }
define void @main(){
%var_13 = alloca i32, i32 50
%var_14 = add i32 3, 0
%var_15 = getelementptr i32, i32* %var_13, i32 0
store i32 %var_14, i32* %var_15
%var_16 = add i32 8, 0
%var_17 = getelementptr i32, i32* %var_13, i32 1
store i32 %var_16, i32* %var_17
%var_18 = getelementptr i32, i32* %var_13, i32 0
%var_19 = load i32, i32* %var_18
%var_20 = getelementptr i32, i32* %var_13, i32 1
%var_21 = load i32, i32* %var_20
%var_22 = call  i32 @func(i32 %var_19, i32 %var_21)
%var_23 = getelementptr i32, i32* %var_13, i32 2
store i32 %var_22, i32* %var_23
%var_24 = getelementptr i32, i32* %var_13, i32 2
%var_25 = load i32, i32* %var_24
call void @printi(i32 %var_25)
br label %label_0
label_0:
br label %label_1
br label %label_1
label_1:
%var_27 = add i32 0, 0
%var_28 = getelementptr i32, i32* %var_13, i32 3
store i32 %var_27, i32* %var_28
%var_29 = getelementptr i32, i32* %var_13, i32 3
%var_30 = load i32, i32* %var_29
call void @printi(i32 %var_30)
br label %label_5
%var_32.ptr = getelementptr [20 x i8], [20 x i8]* @var_32, i32 0, i32 0
call void @print(i8* %var_32.ptr)
br label %label_0
br label %label_2
label_2:
br label %label_3
br label %label_3
label_3:
%var_34 = add i32 5, 0
%var_35 = getelementptr i32, i32* %var_13, i32 4
store i32 %var_34, i32* %var_35
%var_36.ptr = getelementptr [20 x i8], [20 x i8]* @var_36, i32 0, i32 0
call void @print(i8* %var_36.ptr)
br label %label_2
br label %label_2
br label %label_4
label_4:
br label %label_0
br label %label_5
label_5:
ret void }
