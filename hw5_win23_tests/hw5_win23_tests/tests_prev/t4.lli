@var_55 = constant [12 x i8] c"0 mod 11 = \00"
@var_61 = constant [12 x i8] c"18 mod 2 = \00"
@var_67 = constant [12 x i8] c"20 mod 3 = \00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @mod(i32, i32){
%var_2 = alloca i32, i32 50
call void @check_division(i32 %1)
%var_3 = sdiv i32 %0, %1
%var_4 = mul i32 %var_3, %1
%var_5 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_4, i32* %var_5
%var_6 = getelementptr i32, i32* %var_2, i32 0
%var_7 = load i32, i32* %var_6
%var_8 = sub i32 %0, %var_7
ret i32 %var_8
ret i32 0 }
define void @main(){
%var_9 = alloca i32, i32 50
%var_10 = add i32 8, 0
call void @printi(i32 %var_10)
%var_12 = add i32 150, 0
call void @printi(i32 %var_12)
%var_14 = add i32 1, 0
%var_15 = add i32 2, 0
%var_16 = add i32 %var_14, %var_15
%var_17 = add i32 3, 0
%var_18 = add i32 %var_16, %var_17
%var_19 = add i32 1, 0
%var_20 = add i32 %var_18, %var_19
call void @printi(i32 %var_20)
%var_22 = add i32 120, 0
%var_23 = add i32 50, 0
%var_24 = sub i32 %var_22, %var_23
%var_25 = and i32 255, %var_24
%var_26 = add i32 1, 0
%var_27 = sub i32 %var_25, %var_26
%var_28 = and i32 255, %var_27
%var_29 = add i32 7, 0
%var_30 = sub i32 %var_28, %var_29
%var_31 = and i32 255, %var_30
call void @printi(i32 %var_31)
%var_33 = add i32 10, 0
%var_34 = add i32 2, 0
%var_35 = add i32 3, 0
%var_36 = mul i32 %var_34, %var_35
%var_37 = sub i32 %var_33, %var_36
%var_38 = add i32 1, 0
%var_39 = add i32 %var_37, %var_38
call void @printi(i32 %var_39)
%var_41 = add i32 1338, 0
%var_42 = add i32 8, 0
%var_43 = sub i32 %var_41, %var_42
call void @printi(i32 %var_43)
%var_45 = add i32 10, 0
%var_46 = add i32 2, 0
call void @check_division(i32 %var_46)
%var_47 = sdiv i32 %var_45, %var_46
call void @printi(i32 %var_47)
%var_49 = add i32 1, 0
%var_50 = add i32 400, 0
%var_51 = add i32 3, 0
call void @check_division(i32 %var_51)
%var_52 = sdiv i32 %var_50, %var_51
%var_53 = add i32 %var_49, %var_52
call void @printi(i32 %var_53)
%var_55.ptr = getelementptr [12 x i8], [12 x i8]* @var_55, i32 0, i32 0
call void @print(i8* %var_55.ptr)
%var_57 = add i32 0, 0
%var_58 = add i32 11, 0
%var_59 = call  i32 @mod(i32 %var_57, i32 %var_58)
call void @printi(i32 %var_59)
%var_61.ptr = getelementptr [12 x i8], [12 x i8]* @var_61, i32 0, i32 0
call void @print(i8* %var_61.ptr)
%var_63 = add i32 18, 0
%var_64 = add i32 2, 0
%var_65 = call  i32 @mod(i32 %var_63, i32 %var_64)
call void @printi(i32 %var_65)
%var_67.ptr = getelementptr [12 x i8], [12 x i8]* @var_67, i32 0, i32 0
call void @print(i8* %var_67.ptr)
%var_69 = add i32 20, 0
%var_70 = add i32 3, 0
%var_71 = call  i32 @mod(i32 %var_69, i32 %var_70)
call void @printi(i32 %var_71)
%var_73 = add i32 10, 0
%var_74 = add i32 2, 0
%var_75 = mul i32 %var_73, %var_74
%var_76 = add i32 5, 0
call void @check_division(i32 %var_76)
%var_77 = sdiv i32 %var_75, %var_76
call void @printi(i32 %var_77)
%var_79 = add i32 10000, 0
%var_80 = add i32 10, 0
call void @check_division(i32 %var_80)
%var_81 = sdiv i32 %var_79, %var_80
%var_82 = add i32 10, 0
call void @check_division(i32 %var_82)
%var_83 = sdiv i32 %var_81, %var_82
%var_84 = add i32 10, 0
call void @check_division(i32 %var_84)
%var_85 = sdiv i32 %var_83, %var_84
call void @printi(i32 %var_85)
%var_87 = add i32 100, 0
%var_88 = add i32 4, 0
%var_89 = mul i32 %var_87, %var_88
%var_90 = add i32 5, 0
call void @check_division(i32 %var_90)
%var_91 = sdiv i32 %var_89, %var_90
%var_92 = add i32 3, 0
%var_93 = mul i32 %var_91, %var_92
%var_94 = add i32 2, 0
call void @check_division(i32 %var_94)
%var_95 = sdiv i32 %var_93, %var_94
call void @printi(i32 %var_95)
%var_97 = add i32 120, 0
%var_98 = add i32 100, 0
%var_99 = add i32 %var_97, %var_98
%var_100 = add i32 90, 0
%var_101 = sub i32 %var_99, %var_100
%var_102 = add i32 30, 0
%var_103 = add i32 10, 0
call void @check_division(i32 %var_103)
%var_104 = sdiv i32 %var_102, %var_103
%var_105 = add i32 2, 0
%var_106 = mul i32 %var_104, %var_105
%var_107 = add i32 %var_101, %var_106
call void @printi(i32 %var_107)
ret void }
