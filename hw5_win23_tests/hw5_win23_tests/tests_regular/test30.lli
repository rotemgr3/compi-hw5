@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @Func(i32, i32, i32){
%var_2 = alloca i32, i32 50
call void @printi(i32 %0)
call void @printi(i32 %1)
call void @printi(i32 %2)
ret void }
define void @maxTestsPassMultipleParametersToFunc(){
%var_6 = alloca i32, i32 50
%var_7 = add i32 33, 0
%var_8 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_7, i32* %var_8
%var_9 = add i32 3, 0
%var_10 = getelementptr i32, i32* %var_6, i32 1
store i32 %var_9, i32* %var_10
%var_11 = add i32 8, 0
%var_12 = add i32 2, 0
%var_13 = add i32 %var_11, %var_12
%var_14 = getelementptr i32, i32* %var_6, i32 0
%var_15 = load i32, i32* %var_14
%var_16 = getelementptr i32, i32* %var_6, i32 1
%var_17 = load i32, i32* %var_16
%var_18 = add i32 8, 0
%var_19 = add i32 %var_17, %var_18
%var_20 = and i32 255, %var_19
call void @Func(i32 %var_13, i32 %var_15, i32 %var_20)
%var_22 = add i32 14, 0
%var_23 = getelementptr i32, i32* %var_6, i32 0
%var_24 = load i32, i32* %var_23
%var_25 = getelementptr i32, i32* %var_6, i32 1
%var_26 = load i32, i32* %var_25
%var_27 = add i32 8, 0
%var_28 = add i32 %var_26, %var_27
%var_29 = and i32 255, %var_28
call void @Func(i32 %var_22, i32 %var_24, i32 %var_29)
ret void }
define void @main(){
%var_31 = alloca i32, i32 50
call void @maxTestsPassMultipleParametersToFunc()
ret void }
