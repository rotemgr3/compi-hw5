@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @foo(){
%var_2 = alloca i32, i32 50
%var_3 = add i32 0, 0
%var_4 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_3, i32* %var_4
%var_5 = getelementptr i32, i32* %var_2, i32 0
%var_6 = load i32, i32* %var_5
%var_7 = getelementptr i32, i32* %var_2, i32 0
%var_8 = load i32, i32* %var_7
ret i32 %var_8
ret i32 0 }
define i32 @bar(){
%var_9 = alloca i32, i32 50
%var_10 = add i32 0, 0
%var_11 = getelementptr i32, i32* %var_9, i32 0
store i32 %var_10, i32* %var_11
%var_12 = getelementptr i32, i32* %var_9, i32 0
%var_13 = load i32, i32* %var_12
%var_14 = getelementptr i32, i32* %var_9, i32 0
%var_15 = load i32, i32* %var_14
ret i32 %var_15
ret i32 0 }
define i32 @zoo(){
%var_16 = alloca i32, i32 50
br label @
%var_18 = getelementptr i32, i32* %var_16, i32 0
%var_19 = load i32, i32* %var_18
%var_20 = icmp eq i32 0, %var_19
br i1 %var_20, label %label_1, label %label_0
%var_21 = getelementptr i32, i32* %var_16, i32 0
%var_22 = load i32, i32* %var_21
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_23 = phi i32 [ 1, %label_0], [0, %label_1]
ret i32 %var_23
ret i32 0 }
define void @main(){
%var_24 = alloca i32, i32 50
%var_25 = call  i32 @foo()
call void @printi(i32 %var_25)
%var_27 = call  i32 @bar()
call void @printi(i32 %var_27)
%var_29 = call i32 @zoo()
%var_30 = icmp eq i32 0, %var_29
br i1 %var_30, label %label_4, label %label_3
br label %label_3
label_3:
%var_31 = add i32 1, 0
call void @printi(i32 %var_31)
br label %label_5
br label %label_4
label_4:
%var_33 = add i32 0, 0
call void @printi(i32 %var_33)
br label %label_5
label_5:
ret void }
