@var_28 = constant [3 x i8] c"a=\00"
@var_33 = constant [3 x i8] c"k=\00"
@var_43 = constant [13 x i8] c"f(a,g(3,2))=\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @g(i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 2, 0
%var_4 = mul i32 %1, %var_3
%var_5 = add i32 %0, %var_4
%var_6 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_5, i32* %var_6
%var_7 = getelementptr i32, i32* %var_2, i32 0
%var_8 = load i32, i32* %var_7
%var_9 = add i32 1, 0
%var_10 = add i32 %var_8, %var_9
%var_11 = add i32 2, 0
call void @check_division(i32 %var_11)
%var_12 = sdiv i32 %var_10, %var_11
ret i32 %var_12
ret i32 0 }
define void @f(i32, i32){
%var_13 = alloca i32, i32 50
%var_14 = add i32 2, 0
%var_15 = mul i32 %1, %var_14
%var_16 = add i32 %0, %var_15
%var_17 = getelementptr i32, i32* %var_13, i32 0
store i32 %var_16, i32* %var_17
%var_18 = add i32 %0, %1
%var_19 = getelementptr i32, i32* %var_13, i32 0
%var_20 = load i32, i32* %var_19
%var_21 = add i32 %var_18, %var_20
call void @printi(i32 %var_21)
ret void }
define void @main(){
%var_23 = alloca i32, i32 50
%var_24 = add i32 1, 0
%var_25 = add i32 2, 0
%var_26 = call  i32 @g(i32 %var_24, i32 %var_25)
%var_27 = getelementptr i32, i32* %var_23, i32 0
store i32 %var_26, i32* %var_27
%var_28.ptr = getelementptr [3 x i8], [3 x i8]* @var_28, i32 0, i32 0
call void @print(i8* %var_28.ptr)
%var_30 = getelementptr i32, i32* %var_23, i32 0
%var_31 = load i32, i32* %var_30
call void @printi(i32 %var_31)
%var_33.ptr = getelementptr [3 x i8], [3 x i8]* @var_33, i32 0, i32 0
call void @print(i8* %var_33.ptr)
%var_35 = getelementptr i32, i32* %var_23, i32 0
%var_36 = load i32, i32* %var_35
%var_37 = add i32 3, 0
%var_38 = add i32 %var_36, %var_37
%var_39 = getelementptr i32, i32* %var_23, i32 1
store i32 %var_38, i32* %var_39
%var_40 = getelementptr i32, i32* %var_23, i32 1
%var_41 = load i32, i32* %var_40
call void @printi(i32 %var_41)
%var_43.ptr = getelementptr [13 x i8], [13 x i8]* @var_43, i32 0, i32 0
call void @print(i8* %var_43.ptr)
%var_45 = getelementptr i32, i32* %var_23, i32 0
%var_46 = load i32, i32* %var_45
%var_47 = add i32 3, 0
%var_48 = add i32 2, 0
%var_49 = call  i32 @g(i32 %var_47, i32 %var_48)
call void @f(i32 %var_46, i32 %var_49)
ret void
ret void }
