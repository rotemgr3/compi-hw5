@var_4 = constant [5 x i8] c"true\00"
@var_6 = constant [6 x i8] c"false\00"
@var_10 = constant [13 x i8] c"bool is true\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @printBool(i32){
%var_2 = alloca i32, i32 50
%var_3 = icmp eq i32 0, %0
br i1 %var_3, label %label_1, label %label_0
br label %label_0
label_0:
%var_4.ptr = getelementptr [5 x i8], [5 x i8]* @var_4, i32 0, i32 0
call void @print(i8* %var_4.ptr)
br label %label_2
br label %label_1
label_1:
%var_6.ptr = getelementptr [6 x i8], [6 x i8]* @var_6, i32 0, i32 0
call void @print(i8* %var_6.ptr)
br label %label_2
label_2:
ret void }
define void @printFoo(i32, i32, i32, i32){
%var_8 = alloca i32, i32 50
%var_9 = icmp eq i32 0, %0
br i1 %var_9, label %label_4, label %label_3
br label %label_3
label_3:
%var_10.ptr = getelementptr [13 x i8], [13 x i8]* @var_10, i32 0, i32 0
call void @print(i8* %var_10.ptr)
br label %label_4
label_4:
call void @printi(i32 %1)
%var_13 = icmp eq i32 0, %2
br i1 %var_13, label %label_6, label %label_5
br label %label_5
label_5:
br label %label_7
label_6:
br label %label_7
label_7:
%var_14 = phi i32 [ 1, %label_5], [0, %label_6]
call void @printBool(i32 %var_14)
call void @printi(i32 %3)
ret void }
define i32 @inc(i32){
%var_17 = alloca i32, i32 50
%var_18 = add i32 1, 0
%var_19 = add i32 %0, %var_18
ret i32 %var_19
ret i32 0 }
define void @main(){
%var_20 = alloca i32, i32 50
%var_21 = add i32 5, 0
%var_22 = add i32 6, 0
%var_23 = icmp slt i32 %var_21, %var_22
br i1 %var_23, label %label_8, label %label_9
br label %label_8
label_8:
br label %label_10
label_9:
br label %label_10
label_10:
%var_24 = phi i32 [ 1, %label_8], [0, %label_9]
%var_25 = add i32 2, 0
%var_26 = add i32 4, 0
%var_27 = add i32 %var_25, %var_26
br label %label_11
br label %label_11
label_11:
br label %label_13
label_12:
br label %label_13
label_13:
%var_28 = phi i32 [ 1, %label_11], [0, %label_12]
%var_29 = add i32 2, 0
%var_30 = call  i32 @inc(i32 %var_29)
call void @printFoo(i32 %var_24, i32 %var_27, i32 %var_28, i32 %var_30)
ret void }
