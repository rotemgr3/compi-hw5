@var_3 = constant [21 x i8] c"This shouldn't print\00"
@var_7 = constant [18 x i8] c"This should print\00"
@var_26 = constant [8 x i8] c"Success\00"
@var_28 = constant [10 x i8] c"Failure 1\00"
@var_30 = constant [10 x i8] c"Failure 2\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @f(){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [21 x i8], [21 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
br label %label_0
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_5 = phi i32 [ 1, %label_0], [0, %label_1]
ret i32 %var_5
ret i32 0 }
define i32 @g(){
%var_6 = alloca i32, i32 50
%var_7.ptr = getelementptr [18 x i8], [18 x i8]* @var_7, i32 0, i32 0
call void @print(i8* %var_7.ptr)
br label %label_3
br label %label_3
label_3:
br label %label_5
label_4:
br label %label_5
label_5:
%var_9 = phi i32 [ 1, %label_3], [0, %label_4]
ret i32 %var_9
ret i32 0 }
define void @main(){
%var_10 = alloca i32, i32 50
%var_11 = add i32 5, 0
%var_12 = add i32 4, 0
%var_13 = icmp sgt i32 %var_11, %var_12
br i1 %var_13, label %label_6, label %label_8
br label %label_6
label_6:
%var_14 = add i32 3, 0
%var_15 = add i32 2, 0
%var_16 = icmp sgt i32 %var_14, %var_15
br i1 %var_16, label %label_7, label %label_8
br label %label_7
label_7:
br label %label_9
label_8:
br label %label_9
label_9:
%var_17 = phi i32 [ 1, %label_7], [0, %label_8]
%var_18 = getelementptr i32, i32* %var_10, i32 0
store i32 %var_17, i32* %var_18
%var_19 = getelementptr i32, i32* %var_10, i32 0
%var_20 = load i32, i32* %var_19
%var_21 = icmp eq i32 0, %var_20
br i1 %var_21, label %label_11, label %label_10
br label %label_10
label_10:
%var_22 = call i32 @g()
%var_23 = icmp eq i32 0, %var_22
br i1 %var_23, label %label_11, label %label_12
br label %label_11
label_11:
%var_24 = call i32 @f()
%var_25 = icmp eq i32 0, %var_24
br i1 %var_25, label %label_13, label %label_12
br label %label_12
label_12:
%var_26.ptr = getelementptr [8 x i8], [8 x i8]* @var_26, i32 0, i32 0
call void @print(i8* %var_26.ptr)
ret void
br label %label_14
br label %label_13
label_13:
%var_28.ptr = getelementptr [10 x i8], [10 x i8]* @var_28, i32 0, i32 0
call void @print(i8* %var_28.ptr)
br label %label_14
label_14:
%var_30.ptr = getelementptr [10 x i8], [10 x i8]* @var_30, i32 0, i32 0
call void @print(i8* %var_30.ptr)
ret void }
