@var_11 = constant [85 x i8] c"Hardships often prepare ordinary people for an extraordinary destiny. – C.S. Lewis\00"
@var_16 = constant [138 x i8] c"Believe in yourself. You are braver than you think, more talented than you know, and capable of more than you imagine. ― Roy T. Bennett\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @Func(i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 3, 0
%var_4 = icmp sgt i32 %0, %var_3
br i1 %var_4, label %label_0, label %label_4
br label %label_0
label_0:
br label %label_1
br label %label_1
label_1:
br label %label_3
label_2:
br label %label_3
label_3:
%var_5 = phi i32 [ 1, %label_1], [0, %label_2]
ret i32 %var_5
br label %label_4
label_4:
br label %label_6
br label %label_5
label_5:
br label %label_7
label_6:
br label %label_7
label_7:
%var_6 = phi i32 [ 1, %label_5], [0, %label_6]
ret i32 %var_6
ret i32 0 }
define i32 @maxTestscheckReturnBoolFromFunc(){
%var_7 = alloca i32, i32 50
%var_8 = add i32 5, 0
%var_9 = call i32 @Func(i32 %var_8)
%var_10 = icmp eq i32 0, %var_9
br i1 %var_10, label %label_9, label %label_8
br label %label_8
label_8:
%var_11.ptr = getelementptr [85 x i8], [85 x i8]* @var_11, i32 0, i32 0
call void @print(i8* %var_11.ptr)
br label %label_9
label_9:
%var_13 = add i32 1, 0
%var_14 = call i32 @Func(i32 %var_13)
%var_15 = icmp eq i32 0, %var_14
br i1 %var_15, label %label_10, label %label_11
br label %label_10
label_10:
%var_16.ptr = getelementptr [138 x i8], [138 x i8]* @var_16, i32 0, i32 0
call void @print(i8* %var_16.ptr)
br label %label_11
label_11:
ret i32 0 }
define void @main(){
%var_18 = alloca i32, i32 50
%var_19 = call i32 @maxTestscheckReturnBoolFromFunc()
%var_20 = icmp eq i32 0, %var_19
br i1 %var_20, label %label_13, label %label_12
br label %label_12
label_12:
br label %label_14
label_13:
br label %label_14
label_14:
%var_21 = phi i32 [ 1, %label_12], [0, %label_13]
ret void }
