@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @maxTestsArithmeticBetweenVars(){
%var_2 = alloca i32, i32 50
%var_3 = add i32 3, 0
%var_4 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_3, i32* %var_4
%var_5 = add i32 7, 0
%var_6 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_5, i32* %var_6
%var_7 = add i32 31, 0
%var_8 = getelementptr i32, i32* %var_2, i32 2
store i32 %var_7, i32* %var_8
%var_9 = getelementptr i32, i32* %var_2, i32 0
%var_10 = load i32, i32* %var_9
%var_11 = getelementptr i32, i32* %var_2, i32 1
%var_12 = load i32, i32* %var_11
%var_13 = add i32 %var_10, %var_12
%var_14 = getelementptr i32, i32* %var_2, i32 2
%var_15 = load i32, i32* %var_14
%var_16 = getelementptr i32, i32* %var_2, i32 0
%var_17 = load i32, i32* %var_16
%var_18 = mul i32 %var_15, %var_17
%var_19 = add i32 %var_13, %var_18
%var_20 = getelementptr i32, i32* %var_2, i32 1
%var_21 = load i32, i32* %var_20
%var_22 = getelementptr i32, i32* %var_2, i32 2
%var_23 = load i32, i32* %var_22
call void @check_division(i32 %var_23)
%var_24 = sdiv i32 %var_21, %var_23
%var_25 = sub i32 %var_19, %var_24
%var_26 = getelementptr i32, i32* %var_2, i32 3
store i32 %var_25, i32* %var_26
%var_27 = getelementptr i32, i32* %var_2, i32 3
%var_28 = load i32, i32* %var_27
call void @printi(i32 %var_28)
ret void }
define void @main(){
%var_30 = alloca i32, i32 50
call void @maxTestsArithmeticBetweenVars()
ret void }
