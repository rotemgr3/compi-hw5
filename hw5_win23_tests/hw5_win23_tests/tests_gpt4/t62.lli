@var_3 = constant [127 x i8] c"If you believe it will work out, you’ll see opportunities. If you believe it won’t, you will see obstacles. – Wayne Dyer\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @Func(i32, i32){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [127 x i8], [127 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
ret void }
define void @maxTestsTestPassRelopToFunc(){
%var_5 = alloca i32, i32 50
%var_6 = add i32 1, 0
%var_7 = add i32 2, 0
%var_8 = icmp slt i32 %var_6, %var_7
br i1 %var_8, label %label_0, label %label_1
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_9 = phi i32 [ 1, %label_0], [0, %label_1]
%var_10 = add i32 3, 0
%var_11 = add i32 4, 0
%var_12 = icmp slt i32 %var_10, %var_11
br i1 %var_12, label %label_3, label %label_4
br label %label_3
label_3:
br label %label_5
label_4:
br label %label_5
label_5:
%var_13 = phi i32 [ 1, %label_3], [0, %label_4]
call void @Func(i32 %var_9, i32 %var_13)
ret void }
define void @main(){
%var_15 = alloca i32, i32 50
call void @maxTestsTestPassRelopToFunc()
ret void }
