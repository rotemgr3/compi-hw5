@var_4 = constant [15 x i8] c"var is true :)\00"
@var_6 = constant [16 x i8] c"var is false :(\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @funBool(i32){
%var_2 = alloca i32, i32 50
%var_3 = icmp eq i32 0, %0
br i1 %var_3, label %label_1, label %label_0
br label %label_0
label_0:
%var_4.ptr = getelementptr [15 x i8], [15 x i8]* @var_4, i32 0, i32 0
call void @print(i8* %var_4.ptr)
br label %label_2
br label %label_1
label_1:
%var_6.ptr = getelementptr [16 x i8], [16 x i8]* @var_6, i32 0, i32 0
call void @print(i8* %var_6.ptr)
br label %label_2
label_2:
ret i32 0 }
define void @main(){
%var_8 = alloca i32, i32 50
br label %label_3
br label %label_3
label_3:
br label %label_5
label_4:
br label %label_5
label_5:
%var_9 = phi i32 [ 1, %label_3], [0, %label_4]
%var_10 = getelementptr i32, i32* %var_8, i32 0
store i32 %var_9, i32* %var_10
br label %label_7
br label %label_6
label_6:
br label %label_8
label_7:
br label %label_8
label_8:
%var_11 = phi i32 [ 1, %label_6], [0, %label_7]
%var_12 = getelementptr i32, i32* %var_8, i32 1
store i32 %var_11, i32* %var_12
%var_13 = getelementptr i32, i32* %var_8, i32 1
%var_14 = load i32, i32* %var_13
%var_15 = icmp eq i32 0, %var_14
br i1 %var_15, label %label_10, label %label_9
br label %label_9
label_9:
br label %label_11
label_10:
br label %label_11
label_11:
%var_16 = phi i32 [ 1, %label_9], [0, %label_10]
%var_17 = call i32 @funBool(i32 %var_16)
%var_18 = icmp eq i32 0, %var_17
br i1 %var_18, label %label_13, label %label_12
br label %label_12
label_12:
br label %label_14
label_13:
br label %label_14
label_14:
%var_19 = phi i32 [ 1, %label_12], [0, %label_13]
ret void }
