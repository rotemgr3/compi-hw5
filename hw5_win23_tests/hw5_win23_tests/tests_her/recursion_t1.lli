@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @foo(i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 0, 0
%var_4 = icmp eq i32 %0, %var_3
br i1 %var_4, label %label_0, label %label_1
br label %label_0
label_0:
%var_5 = add i32 0, 0
ret i32 0
br label %label_1
label_1:
%var_6 = add i32 1, 0
%var_7 = icmp eq i32 %0, %var_6
br i1 %var_7, label %label_2, label %label_3
br label %label_2
label_2:
%var_8 = add i32 1, 0
ret i32 1
br label %label_3
label_3:
%var_9 = add i32 2, 0
%var_10 = sub i32 %0, %var_9
%var_11 = call  i32 @foo(i32 %var_10)
ret i32 %var_11
ret i32 0 }
define void @main(){
%var_12 = alloca i32, i32 50
%var_13 = add i32 5, 0
%var_14 = call  i32 @foo(i32 %var_13)
call void @printi(i32 %var_14)
%var_16 = add i32 4, 0
%var_17 = call  i32 @foo(i32 %var_16)
call void @printi(i32 %var_17)
%var_19 = add i32 3, 0
%var_20 = call  i32 @foo(i32 %var_19)
call void @printi(i32 %var_20)
%var_22 = add i32 2, 0
%var_23 = call  i32 @foo(i32 %var_22)
call void @printi(i32 %var_23)
%var_25 = add i32 1, 0
%var_26 = call  i32 @foo(i32 %var_25)
call void @printi(i32 %var_26)
%var_28 = add i32 0, 0
%var_29 = call  i32 @foo(i32 %var_28)
call void @printi(i32 %var_29)
ret void }
