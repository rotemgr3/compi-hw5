@var_41 = constant [8 x i8] c"Res is \00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3 = add i32 2, 0
%var_4 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_3, i32* %var_4
%var_5 = add i32 0, 0
%var_6 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_5, i32* %var_6
br label %label_0
label_0:
%var_7 = getelementptr i32, i32* %var_2, i32 0
%var_8 = load i32, i32* %var_7
%var_9 = add i32 0, 0
%var_10 = icmp sgt i32 %var_8, %var_9
br i1 %var_10, label %label_1, label %label_7
br label %label_1
label_1:
%var_11 = add i32 5, 0
%var_12 = getelementptr i32, i32* %var_2, i32 2
store i32 %var_11, i32* %var_12
%var_13 = add i32 1, 0
%var_14 = getelementptr i32, i32* %var_2, i32 3
store i32 %var_13, i32* %var_14
br label %label_2
label_2:
br label %label_3
br label %label_3
label_3:
%var_15 = getelementptr i32, i32* %var_2, i32 3
%var_16 = load i32, i32* %var_15
%var_17 = getelementptr i32, i32* %var_2, i32 2
%var_18 = load i32, i32* %var_17
%var_19 = mul i32 %var_16, %var_18
%var_20 = getelementptr i32, i32* %var_2, i32 3
store i32 %var_19, i32* %var_20
%var_21 = getelementptr i32, i32* %var_2, i32 2
%var_22 = load i32, i32* %var_21
%var_23 = add i32 1, 0
%var_24 = sub i32 %var_22, %var_23
%var_25 = getelementptr i32, i32* %var_2, i32 2
store i32 %var_24, i32* %var_25
%var_26 = getelementptr i32, i32* %var_2, i32 2
%var_27 = load i32, i32* %var_26
%var_28 = add i32 1, 0
%var_29 = icmp eq i32 %var_27, %var_28
br i1 %var_29, label %label_4, label %label_5
br label %label_4
label_4:
br label %label_6
br label %label_5
label_5:
br label %label_2
br label %label_6
label_6:
%var_30 = getelementptr i32, i32* %var_2, i32 0
%var_31 = load i32, i32* %var_30
%var_32 = add i32 1, 0
%var_33 = sub i32 %var_31, %var_32
%var_34 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_33, i32* %var_34
%var_35 = getelementptr i32, i32* %var_2, i32 1
%var_36 = load i32, i32* %var_35
%var_37 = getelementptr i32, i32* %var_2, i32 3
%var_38 = load i32, i32* %var_37
%var_39 = add i32 %var_36, %var_38
%var_40 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_39, i32* %var_40
br label %label_0
br label %label_7
label_7:
%var_41.ptr = getelementptr [8 x i8], [8 x i8]* @var_41, i32 0, i32 0
call void @print(i8* %var_41.ptr)
%var_43 = getelementptr i32, i32* %var_2, i32 1
%var_44 = load i32, i32* %var_43
call void @printi(i32 %var_44)
ret void }
