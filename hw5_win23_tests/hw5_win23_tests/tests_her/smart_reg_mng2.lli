@var_45 = constant [5 x i8] c"left\00"
@var_90 = constant [6 x i8] c"right\00"
@.DIV_BY_ZERO_ERROR = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @printzero(i8* getelementptr([23 x i8], [23 x i8]* @.DIV_BY_ZERO_ERROR, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@.int_internal = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int = constant [4 x i8] c"%d\0A\00"
@.str = constant [4 x i8] c"%s\0A\00"
@.zero_str = constant [3 x i8] c"%s\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)
ret void
}
define void @printzero(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([3 x i8], [3 x i8]* @.zero_str, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_internal, i32 0, i32 0), i32 %0)
ret void
}
define i32 @foo0(i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 0, 0
ret i32 0
ret i32 0 }
define i32 @foo1(i32, i32){
%var_4 = alloca i32, i32 50
%var_5 = add i32 1, 0
ret i32 1
ret i32 0 }
define i32 @foo2(i32, i32){
%var_6 = alloca i32, i32 50
%var_7 = add i32 2, 0
ret i32 2
ret i32 0 }
define i32 @foo3(i32, i32){
%var_8 = alloca i32, i32 50
%var_9 = add i32 3, 0
ret i32 3
ret i32 0 }
define i32 @foo4(i32, i32){
%var_10 = alloca i32, i32 50
%var_11 = add i32 4, 0
ret i32 4
ret i32 0 }
define i32 @foo5(i32, i32){
%var_12 = alloca i32, i32 50
%var_13 = add i32 5, 0
ret i32 5
ret i32 0 }
define i32 @foo6(i32, i32){
%var_14 = alloca i32, i32 50
%var_15 = add i32 6, 0
ret i32 6
ret i32 0 }
define i32 @foo7(i32, i32){
%var_16 = alloca i32, i32 50
%var_17 = add i32 7, 0
ret i32 7
ret i32 0 }
define i32 @foo8(i32, i32){
%var_18 = alloca i32, i32 50
%var_19 = add i32 8, 0
ret i32 8
ret i32 0 }
define i32 @foo9(i32, i32){
%var_20 = alloca i32, i32 50
%var_21 = add i32 9, 0
ret i32 9
ret i32 0 }
define i32 @foo10(i32, i32){
%var_22 = alloca i32, i32 50
%var_23 = add i32 10, 0
ret i32 10
ret i32 0 }
define i32 @foo11(i32, i32){
%var_24 = alloca i32, i32 50
%var_25 = add i32 11, 0
ret i32 11
ret i32 0 }
define i32 @foo12(i32, i32){
%var_26 = alloca i32, i32 50
%var_27 = add i32 12, 0
ret i32 12
ret i32 0 }
define i32 @foo13(i32, i32){
%var_28 = alloca i32, i32 50
%var_29 = add i32 13, 0
ret i32 13
ret i32 0 }
define i32 @foo14(i32, i32){
%var_30 = alloca i32, i32 50
%var_31 = add i32 14, 0
ret i32 14
ret i32 0 }
define i32 @foo15(i32, i32){
%var_32 = alloca i32, i32 50
%var_33 = add i32 15, 0
ret i32 15
ret i32 0 }
define i32 @foo16(i32, i32){
%var_34 = alloca i32, i32 50
%var_35 = add i32 16, 0
ret i32 16
ret i32 0 }
define i32 @foo17(i32, i32){
%var_36 = alloca i32, i32 50
%var_37 = add i32 17, 0
ret i32 17
ret i32 0 }
define i32 @foo18(i32, i32){
%var_38 = alloca i32, i32 50
%var_39 = add i32 17, 0
ret i32 17
ret i32 0 }
define void @main(){
%var_40 = alloca i32, i32 50
%var_41 = add i32 1, 0
%var_42 = getelementptr i32, i32* %var_40, i32 0
store i32 %var_41, i32* %var_42
%var_43 = add i32 2, 0
%var_44 = getelementptr i32, i32* %var_40, i32 1
store i32 %var_43, i32* %var_44
%var_45.ptr = getelementptr [5 x i8], [5 x i8]* @var_45, i32 0, i32 0
call void @print(i8* %var_45.ptr)
%var_47 = add i32 4, 0
%var_48 = add i32 4, 0
%var_49 = call  i32 @foo18(i32 %var_47, i32 %var_48)
%var_50 = add i32 4, 0
%var_51 = call  i32 @foo17(i32 %var_49, i32 %var_50)
%var_52 = add i32 4, 0
%var_53 = call  i32 @foo16(i32 %var_51, i32 %var_52)
%var_54 = add i32 4, 0
%var_55 = call  i32 @foo15(i32 %var_53, i32 %var_54)
%var_56 = add i32 4, 0
%var_57 = call  i32 @foo14(i32 %var_55, i32 %var_56)
%var_58 = add i32 4, 0
%var_59 = call  i32 @foo13(i32 %var_57, i32 %var_58)
%var_60 = add i32 4, 0
%var_61 = call  i32 @foo12(i32 %var_59, i32 %var_60)
%var_62 = add i32 4, 0
%var_63 = call  i32 @foo11(i32 %var_61, i32 %var_62)
%var_64 = add i32 4, 0
%var_65 = call  i32 @foo10(i32 %var_63, i32 %var_64)
%var_66 = add i32 4, 0
%var_67 = call  i32 @foo9(i32 %var_65, i32 %var_66)
%var_68 = add i32 4, 0
%var_69 = call  i32 @foo8(i32 %var_67, i32 %var_68)
%var_70 = add i32 4, 0
%var_71 = call  i32 @foo7(i32 %var_69, i32 %var_70)
%var_72 = add i32 4, 0
%var_73 = call  i32 @foo6(i32 %var_71, i32 %var_72)
%var_74 = add i32 4, 0
%var_75 = call  i32 @foo5(i32 %var_73, i32 %var_74)
%var_76 = add i32 4, 0
%var_77 = call  i32 @foo4(i32 %var_75, i32 %var_76)
%var_78 = add i32 4, 0
%var_79 = call  i32 @foo3(i32 %var_77, i32 %var_78)
%var_80 = add i32 4, 0
%var_81 = call  i32 @foo2(i32 %var_79, i32 %var_80)
%var_82 = add i32 4, 0
%var_83 = call  i32 @foo1(i32 %var_81, i32 %var_82)
%var_84 = add i32 4, 0
%var_85 = call  i32 @foo0(i32 %var_83, i32 %var_84)
%var_86 = getelementptr i32, i32* %var_40, i32 2
store i32 %var_85, i32* %var_86
%var_87 = getelementptr i32, i32* %var_40, i32 2
%var_88 = load i32, i32* %var_87
call void @printi(i32 %var_88)
%var_90.ptr = getelementptr [6 x i8], [6 x i8]* @var_90, i32 0, i32 0
call void @print(i8* %var_90.ptr)
ret void }
