@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @f_int(i32){
%var_2 = alloca i32, i32 50
br label %label_0
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_3 = phi i32 [ 1, %label_0], [0, %label_1]
ret i32 %var_3
ret i32 0 }
define i32 @f_bool(i32){
%var_4 = alloca i32, i32 50
%var_5 = add i32 1, 0
ret i32 1
ret i32 0 }
define i32 @f(){
%var_6 = alloca i32, i32 50
%var_7 = add i32 1, 0
ret i32 1
ret i32 0 }
define i32 @g_int(i32){
%var_8 = alloca i32, i32 50
br label %label_3
br label %label_3
label_3:
br label %label_5
label_4:
br label %label_5
label_5:
%var_9 = phi i32 [ 1, %label_3], [0, %label_4]
ret i32 %var_9
ret i32 0 }
define i32 @g_bool(i32){
%var_10 = alloca i32, i32 50
%var_11 = add i32 1, 0
ret i32 1
ret i32 0 }
define void @main(){
%var_12 = alloca i32, i32 50
%var_13 = call  i32 @f()
%var_14 = call i32 @g_int(i32 %var_13)
%var_15 = icmp eq i32 0, %var_14
br i1 %var_15, label %label_7, label %label_6
br label %label_6
label_6:
br label %label_8
label_7:
br label %label_8
label_8:
%var_16 = phi i32 [ 1, %label_6], [0, %label_7]
%var_17 = getelementptr i32, i32* %var_12, i32 0
store i32 %var_16, i32* %var_17
%var_18 = add i32 1, 0
%var_19 = call i32 @f_int(i32 %var_18)
%var_20 = icmp eq i32 0, %var_19
br i1 %var_20, label %label_10, label %label_9
br label %label_9
label_9:
br label %label_11
label_10:
br label %label_11
label_11:
%var_21 = phi i32 [ 1, %label_9], [0, %label_10]
%var_22 = call  i32 @g_bool(i32 %var_21)
%var_23 = getelementptr i32, i32* %var_12, i32 0
store i32 %var_22, i32* %var_23
%var_24 = getelementptr i32, i32* %var_12, i32 0
%var_25 = load i32, i32* %var_24
call void @printi(i32 %var_25)
%var_27 = call  i32 @f()
%var_28 = call i32 @f_int(i32 %var_27)
%var_29 = icmp eq i32 0, %var_28
br i1 %var_29, label %label_13, label %label_12
br label %label_12
label_12:
br label %label_14
label_13:
br label %label_14
label_14:
%var_30 = phi i32 [ 1, %label_12], [0, %label_13]
%var_31 = call  i32 @f_bool(i32 %var_30)
%var_32 = call i32 @f_int(i32 %var_31)
%var_33 = icmp eq i32 0, %var_32
br i1 %var_33, label %label_16, label %label_15
br label %label_15
label_15:
br label %label_17
label_16:
br label %label_17
label_17:
%var_34 = phi i32 [ 1, %label_15], [0, %label_16]
%var_35 = call  i32 @f_bool(i32 %var_34)
%var_36 = call i32 @f_int(i32 %var_35)
%var_37 = icmp eq i32 0, %var_36
br i1 %var_37, label %label_19, label %label_18
br label %label_18
label_18:
br label %label_20
label_19:
br label %label_20
label_20:
%var_38 = phi i32 [ 1, %label_18], [0, %label_19]
%var_39 = call  i32 @f_bool(i32 %var_38)
%var_40 = call i32 @f_int(i32 %var_39)
%var_41 = icmp eq i32 0, %var_40
br i1 %var_41, label %label_22, label %label_21
br label %label_21
label_21:
br label %label_23
label_22:
br label %label_23
label_23:
%var_42 = phi i32 [ 1, %label_21], [0, %label_22]
%var_43 = getelementptr i32, i32* %var_12, i32 0
store i32 %var_42, i32* %var_43
ret void }
