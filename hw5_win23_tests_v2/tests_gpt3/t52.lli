@var_74 = constant [6 x i8] c"hello\00"
@var_102 = constant [17 x i8] c"The numbers are \00"
@var_110 = constant [5 x i8] c"not \00"
@var_112 = constant [6 x i8] c"equal\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @addint_int_int(i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = getelementptr i32, i32* %var_2, i32 0
store i32 %0, i32* %var_3
%var_4 = getelementptr i32, i32* %var_2, i32 1
store i32 %1, i32* %var_4
br label %label_0
label_0:
br label %label_1
br label %label_1
label_1:
%var_5 = getelementptr i32, i32* %var_2, i32 1
%var_6 = load i32, i32* %var_5
%var_7 = add i32 0, 0
%var_8 = icmp eq i32 %var_6, %var_7
br i1 %var_8, label %label_2, label %label_3
br label %label_2
label_2:
%var_9 = getelementptr i32, i32* %var_2, i32 0
%var_10 = load i32, i32* %var_9
%var_11 = getelementptr i32, i32* %var_2, i32 0
%var_12 = load i32, i32* %var_11
ret i32 %var_12
br label %label_3
label_3:
%var_13 = getelementptr i32, i32* %var_2, i32 0
%var_14 = load i32, i32* %var_13
%var_15 = add i32 1, 0
%var_16 = add i32 %var_14, %var_15
%var_17 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_16, i32* %var_17
%var_18 = getelementptr i32, i32* %var_2, i32 1
%var_19 = load i32, i32* %var_18
%var_20 = add i32 1, 0
%var_21 = sub i32 %var_19, %var_20
%var_22 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_21, i32* %var_22
br label %label_0
br label %label_4
label_4:
ret i32 0 }
define i32 @addByte_byte_int(i32, i32){
%var_23 = alloca i32, i32 50
%var_24 = getelementptr i32, i32* %var_23, i32 0
store i32 %0, i32* %var_24
%var_25 = getelementptr i32, i32* %var_23, i32 1
store i32 %1, i32* %var_25
br label %label_5
label_5:
br label %label_6
br label %label_6
label_6:
%var_26 = getelementptr i32, i32* %var_23, i32 1
%var_27 = load i32, i32* %var_26
%var_28 = add i32 0, 0
%var_29 = icmp eq i32 %var_27, %var_28
br i1 %var_29, label %label_7, label %label_8
br label %label_7
label_7:
%var_30 = getelementptr i32, i32* %var_23, i32 0
%var_31 = load i32, i32* %var_30
%var_32 = getelementptr i32, i32* %var_23, i32 0
%var_33 = load i32, i32* %var_32
ret i32 %var_33
br label %label_8
label_8:
%var_34 = getelementptr i32, i32* %var_23, i32 0
%var_35 = load i32, i32* %var_34
%var_36 = add i32 1, 0
%var_37 = add i32 %var_35, %var_36
%var_38 = and i32 255, %var_37
%var_39 = getelementptr i32, i32* %var_23, i32 0
store i32 %var_38, i32* %var_39
%var_40 = getelementptr i32, i32* %var_23, i32 1
%var_41 = load i32, i32* %var_40
%var_42 = add i32 1, 0
%var_43 = sub i32 %var_41, %var_42
%var_44 = getelementptr i32, i32* %var_23, i32 1
store i32 %var_43, i32* %var_44
br label %label_5
br label %label_9
label_9:
ret i32 0 }
define i32 @areEqual_int_byte(i32, i32){
%var_45 = alloca i32, i32 50
%var_46 = getelementptr i32, i32* %var_45, i32 0
store i32 %0, i32* %var_46
%var_47 = getelementptr i32, i32* %var_45, i32 1
store i32 %1, i32* %var_47
br label %label_10
label_10:
br label %label_11
br label %label_11
label_11:
%var_48 = getelementptr i32, i32* %var_45, i32 0
%var_49 = load i32, i32* %var_48
%var_50 = add i32 0, 0
%var_51 = icmp eq i32 %var_49, %var_50
br i1 %var_51, label %label_12, label %label_16
br label %label_12
label_12:
%var_52 = getelementptr i32, i32* %var_45, i32 1
%var_53 = load i32, i32* %var_52
%var_54 = add i32 0, 0
%var_55 = icmp eq i32 %var_53, %var_54
br i1 %var_55, label %label_13, label %label_14
br label %label_13
label_13:
br label %label_15
label_14:
br label %label_15
label_15:
%var_56 = phi i32 [ 1, %label_13], [0, %label_14]
ret i32 %var_56
br label %label_16
label_16:
%var_57 = getelementptr i32, i32* %var_45, i32 0
%var_58 = load i32, i32* %var_57
%var_59 = add i32 1, 0
%var_60 = sub i32 %var_58, %var_59
%var_61 = getelementptr i32, i32* %var_45, i32 0
store i32 %var_60, i32* %var_61
%var_62 = getelementptr i32, i32* %var_45, i32 1
%var_63 = load i32, i32* %var_62
%var_64 = add i32 1, 0
%var_65 = sub i32 %var_63, %var_64
%var_66 = and i32 255, %var_65
%var_67 = getelementptr i32, i32* %var_45, i32 1
store i32 %var_66, i32* %var_67
br label %label_10
br label %label_17
label_17:
ret i32 0 }
define void @sayHello_int(i32){
%var_68 = alloca i32, i32 50
%var_69 = getelementptr i32, i32* %var_68, i32 0
store i32 %0, i32* %var_69
br label %label_18
label_18:
br label %label_19
br label %label_19
label_19:
%var_70 = getelementptr i32, i32* %var_68, i32 0
%var_71 = load i32, i32* %var_70
%var_72 = add i32 0, 0
%var_73 = icmp eq i32 %var_71, %var_72
br i1 %var_73, label %label_20, label %label_21
br label %label_20
label_20:
ret void
br label %label_21
label_21:
%var_74.ptr = getelementptr [6 x i8], [6 x i8]* @var_74, i32 0, i32 0
call void @print(i8* %var_74.ptr)
%var_76 = getelementptr i32, i32* %var_68, i32 0
%var_77 = load i32, i32* %var_76
%var_78 = add i32 1, 0
%var_79 = sub i32 %var_77, %var_78
%var_80 = getelementptr i32, i32* %var_68, i32 0
store i32 %var_79, i32* %var_80
br label %label_18
br label %label_22
label_22:
ret void }
define void @main(){
%var_81 = alloca i32, i32 50
%var_82 = add i32 0, 0
%var_83 = getelementptr i32, i32* %var_81, i32 0
store i32 %var_82, i32* %var_83
%var_84 = getelementptr i32, i32* %var_81, i32 0
%var_85 = load i32, i32* %var_84
%var_86 = add i32 5, 0
%var_87 = call  i32 @addint_int_int(i32 %var_85, i32 %var_86)
%var_88 = getelementptr i32, i32* %var_81, i32 0
store i32 %var_87, i32* %var_88
%var_89 = getelementptr i32, i32* %var_81, i32 0
%var_90 = load i32, i32* %var_89
call void @printi(i32 %var_90)
%var_92 = add i32 0, 0
%var_93 = getelementptr i32, i32* %var_81, i32 1
store i32 %var_92, i32* %var_93
%var_94 = getelementptr i32, i32* %var_81, i32 1
%var_95 = load i32, i32* %var_94
%var_96 = add i32 5, 0
%var_97 = call  i32 @addByte_byte_int(i32 %var_95, i32 %var_96)
%var_98 = getelementptr i32, i32* %var_81, i32 1
store i32 %var_97, i32* %var_98
%var_99 = getelementptr i32, i32* %var_81, i32 1
%var_100 = load i32, i32* %var_99
call void @printi(i32 %var_100)
%var_102.ptr = getelementptr [17 x i8], [17 x i8]* @var_102, i32 0, i32 0
call void @print(i8* %var_102.ptr)
%var_104 = getelementptr i32, i32* %var_81, i32 0
%var_105 = load i32, i32* %var_104
%var_106 = getelementptr i32, i32* %var_81, i32 1
%var_107 = load i32, i32* %var_106
%var_108 = call i32 @areEqual_int_byte(i32 %var_105, i32 %var_107)
%var_109 = icmp eq i32 0, %var_108
br i1 %var_109, label %label_23, label %label_24
br label %label_23
label_23:
%var_110.ptr = getelementptr [5 x i8], [5 x i8]* @var_110, i32 0, i32 0
call void @print(i8* %var_110.ptr)
br label %label_24
label_24:
%var_112.ptr = getelementptr [6 x i8], [6 x i8]* @var_112, i32 0, i32 0
call void @print(i8* %var_112.ptr)
%var_114 = getelementptr i32, i32* %var_81, i32 0
%var_115 = load i32, i32* %var_114
call void @sayHello_int(i32 %var_115)
ret void }
