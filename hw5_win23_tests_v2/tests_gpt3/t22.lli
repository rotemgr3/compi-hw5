@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @f_int_int_int(i32, i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 %0, %1
%var_4 = add i32 %var_3, %2
ret i32 %var_4
ret i32 0 }
define i32 @g_int_int(i32, i32){
%var_5 = alloca i32, i32 50
%var_6 = add i32 %0, %1
%var_7 = add i32 1, 0
%var_8 = add i32 %var_6, %var_7
ret i32 %var_8
ret i32 0 }
define void @main(){
%var_9 = alloca i32, i32 50
%var_10 = add i32 2, 0
%var_11 = add i32 2, 0
%var_12 = call  i32 @g_int_int(i32 %var_10, i32 %var_11)
%var_13 = add i32 3, 0
%var_14 = add i32 4, 0
%var_15 = call  i32 @g_int_int(i32 %var_13, i32 %var_14)
%var_16 = add i32 1, 0
%var_17 = add i32 1, 0
%var_18 = call  i32 @g_int_int(i32 %var_16, i32 %var_17)
%var_19 = call  i32 @f_int_int_int(i32 %var_12, i32 %var_15, i32 %var_18)
call void @printi(i32 %var_19)
%var_21 = add i32 4, 0
%var_22 = add i32 2, 0
%var_23 = call  i32 @g_int_int(i32 %var_21, i32 %var_22)
%var_24 = add i32 4, 0
%var_25 = add i32 4, 0
%var_26 = call  i32 @g_int_int(i32 %var_24, i32 %var_25)
%var_27 = add i32 5, 0
%var_28 = add i32 1, 0
%var_29 = call  i32 @g_int_int(i32 %var_27, i32 %var_28)
%var_30 = call  i32 @f_int_int_int(i32 %var_23, i32 %var_26, i32 %var_29)
call void @printi(i32 %var_30)
ret void }
