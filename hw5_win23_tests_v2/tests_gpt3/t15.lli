@var_15 = constant [18 x i8] c"This should print\00"
@var_27 = constant [21 x i8] c"This shouldn't print\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @f(){
%var_2 = alloca i32, i32 50
br label %label_27
br label %label_27
label_27:
%var_3 = add i32 1, 0
%var_4 = add i32 0, 0
%var_5 = icmp slt i32 %var_3, %var_4
br i1 %var_5, label %label_1, label %label_0
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_6 = phi i32 [ 1, %label_0], [0, %label_1]
ret i32 %var_6
ret i32 0 }
define void @main(){
%var_7 = alloca i32, i32 50
%var_8 = call i32 @f()
%var_9 = icmp eq i32 0, %var_8
br i1 %var_9, label %label_47, label %label_56
br label %label_47
label_47:
%var_10 = add i32 5, 0
%var_11 = add i32 0, 0
call void @check_division(i32 %var_11)
%var_12 = sdiv i32 %var_10, %var_11
%var_13 = add i32 1, 0
%var_14 = icmp eq i32 %var_12, %var_13
br i1 %var_14, label %label_56, label %label_60
br label %label_56
label_56:
%var_15.ptr = getelementptr [18 x i8], [18 x i8]* @var_15, i32 0, i32 0
call void @print(i8* %var_15.ptr)
br label %label_60
label_60:
%var_17 = add i32 0, 0
%var_18 = getelementptr i32, i32* %var_7, i32 0
store i32 %var_17, i32* %var_18
%var_19 = add i32 5, 0
%var_20 = getelementptr i32, i32* %var_7, i32 0
%var_21 = load i32, i32* %var_20
call void @check_division(i32 %var_21)
%var_22 = sdiv i32 %var_19, %var_21
%var_23 = add i32 1, 0
%var_24 = icmp eq i32 %var_22, %var_23
br i1 %var_24, label %label_78, label %label_73
br label %label_73
label_73:
%var_25 = call i32 @f()
%var_26 = icmp eq i32 0, %var_25
br i1 %var_26, label %label_82, label %label_78
br label %label_78
label_78:
%var_27.ptr = getelementptr [21 x i8], [21 x i8]* @var_27, i32 0, i32 0
call void @print(i8* %var_27.ptr)
br label %label_82
label_82:
ret void }
