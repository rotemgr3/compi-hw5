@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @ex_int_int_int(i32, i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = icmp slt i32 %1, %0
br i1 %var_3, label %label_28, label %label_42
br label %label_28
label_28:
%var_4 = add i32 1, 0
%var_5 = sub i32 %0, %var_4
%var_6 = call  i32 @ex_int_int_int(i32 %var_5, i32 %1, i32 %2)
%var_7 = add i32 1, 0
%var_8 = sub i32 %1, %var_7
%var_9 = call  i32 @ex_int_int_int(i32 %var_8, i32 %2, i32 %0)
%var_10 = add i32 1, 0
%var_11 = sub i32 %2, %var_10
%var_12 = call  i32 @ex_int_int_int(i32 %var_11, i32 %0, i32 %1)
%var_13 = call  i32 @ex_int_int_int(i32 %var_6, i32 %var_9, i32 %var_12)
ret i32 %var_13
br label %label_45
br label %label_42
label_42:
ret i32 %2
br label %label_45
label_45:
ret i32 0 }
define i32 @f_int(i32){
%var_14 = alloca i32, i32 50
%var_15 = add i32 2, 0
%var_16 = mul i32 %0, %var_15
ret i32 %var_16
ret i32 0 }
define void @main(){
%var_17 = alloca i32, i32 50
%var_18 = add i32 14, 0
%var_19 = add i32 13, 0
%var_20 = add i32 12, 0
%var_21 = call  i32 @ex_int_int_int(i32 %var_18, i32 %var_19, i32 %var_20)
call void @printi(i32 %var_21)
%var_23 = add i32 18, 0
%var_24 = add i32 12, 0
%var_25 = add i32 6, 0
%var_26 = call  i32 @ex_int_int_int(i32 %var_23, i32 %var_24, i32 %var_25)
call void @printi(i32 %var_26)
%var_28 = add i32 19, 0
%var_29 = add i32 15, 0
%var_30 = add i32 10, 0
%var_31 = call  i32 @ex_int_int_int(i32 %var_28, i32 %var_29, i32 %var_30)
call void @printi(i32 %var_31)
ret void }
