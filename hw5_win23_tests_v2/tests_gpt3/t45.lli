@var_3 = constant [2 x i8] c"1\00"
@var_7 = constant [2 x i8] c"2\00"
@var_11 = constant [2 x i8] c"3\00"
@var_25 = constant [8 x i8] c"res is \00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @first(){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [2 x i8], [2 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
%var_5 = add i32 1, 0
ret i32 1
ret i32 0 }
define i32 @second(){
%var_6 = alloca i32, i32 50
%var_7.ptr = getelementptr [2 x i8], [2 x i8]* @var_7, i32 0, i32 0
call void @print(i8* %var_7.ptr)
%var_9 = add i32 2, 0
ret i32 2
ret i32 0 }
define i32 @third(){
%var_10 = alloca i32, i32 50
%var_11.ptr = getelementptr [2 x i8], [2 x i8]* @var_11, i32 0, i32 0
call void @print(i8* %var_11.ptr)
%var_13 = add i32 3, 0
ret i32 3
ret i32 0 }
define i32 @sum_int_int_int(i32, i32, i32){
%var_14 = alloca i32, i32 50
%var_15 = add i32 %0, %1
%var_16 = add i32 %var_15, %2
%var_17 = add i32 3, 0
call void @check_division(i32 %var_17)
%var_18 = sdiv i32 %var_16, %var_17
ret i32 %var_18
ret i32 0 }
define void @main(){
%var_19 = alloca i32, i32 50
%var_20 = call  i32 @first()
%var_21 = call  i32 @second()
%var_22 = call  i32 @third()
%var_23 = call  i32 @sum_int_int_int(i32 %var_20, i32 %var_21, i32 %var_22)
%var_24 = getelementptr i32, i32* %var_19, i32 0
store i32 %var_23, i32* %var_24
%var_25.ptr = getelementptr [8 x i8], [8 x i8]* @var_25, i32 0, i32 0
call void @print(i8* %var_25.ptr)
%var_27 = getelementptr i32, i32* %var_19, i32 0
%var_28 = load i32, i32* %var_27
call void @printi(i32 %var_28)
ret void }
