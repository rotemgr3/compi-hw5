@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @foo(){
%var_2 = alloca i32, i32 50
%var_3 = add i32 100, 0
call void @printi(i32 %var_3)
br label %label_29
br label %label_29
label_29:
br label %label_34
label_32:
br label %label_34
label_34:
%var_5 = phi i32 [ 1, %label_29], [0, %label_32]
ret i32 %var_5
ret i32 0 }
define i32 @other_int(i32){
%var_6 = alloca i32, i32 50
%var_7 = add i32 0, 0
call void @printi(i32 %var_7)
%var_9 = add i32 5, 0
%var_10 = icmp eq i32 %0, %var_9
br i1 %var_10, label %label_45, label %label_48
br label %label_45
label_45:
br label %label_50
label_48:
br label %label_50
label_50:
%var_11 = phi i32 [ 1, %label_45], [0, %label_48]
ret i32 %var_11
ret i32 0 }
define void @main(){
%var_12 = alloca i32, i32 50
br label %label_0
br label %label_0
label_0:
%var_13 = call i32 @foo()
%var_14 = icmp eq i32 0, %var_13
br i1 %var_14, label %label_65, label %label_62
br label %label_62
label_62:
br label %label_67
label_65:
br label %label_67
label_67:
%var_15 = phi i32 [ 1, %label_62], [0, %label_65]
%var_16 = getelementptr i32, i32* %var_12, i32 0
store i32 %var_15, i32* %var_16
%var_17 = getelementptr i32, i32* %var_12, i32 0
%var_18 = load i32, i32* %var_17
%var_19 = icmp eq i32 0, %var_18
br i1 %var_19, label %label_1, label %label_81
br label %label_1
label_1:
%var_20 = add i32 3, 0
%var_21 = call i32 @other_int(i32 %var_20)
%var_22 = icmp eq i32 0, %var_21
br i1 %var_22, label %label_84, label %label_81
br label %label_81
label_81:
br label %label_86
label_84:
br label %label_86
label_86:
%var_23 = phi i32 [ 1, %label_81], [0, %label_84]
%var_24 = getelementptr i32, i32* %var_12, i32 1
store i32 %var_23, i32* %var_24
%var_25 = getelementptr i32, i32* %var_12, i32 0
%var_26 = load i32, i32* %var_25
%var_27 = icmp eq i32 0, %var_26
br i1 %var_27, label %label_5, label %label_2
br label %label_2
label_2:
%var_28 = add i32 5, 0
call void @printi(i32 %var_28)
br label %label_102
br label %label_99
label_99:
br label %label_104
label_102:
br label %label_104
label_104:
%var_30 = phi i32 [ 1, %label_99], [0, %label_102]
%var_31 = getelementptr i32, i32* %var_12, i32 0
store i32 %var_30, i32* %var_31
%var_32 = getelementptr i32, i32* %var_12, i32 0
%var_33 = load i32, i32* %var_32
%var_34 = icmp eq i32 0, %var_33
br i1 %var_34, label %label_3, label %label_4
br label %label_3
label_3:
%var_35 = add i32 7, 0
call void @printi(i32 %var_35)
br label %label_4
label_4:
br label %label_6
br label %label_5
label_5:
%var_37 = add i32 6, 0
call void @printi(i32 %var_37)
br label %label_6
label_6:
ret void }
