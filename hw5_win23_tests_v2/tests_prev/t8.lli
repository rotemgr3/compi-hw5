@var_6 = constant [7 x i8] c"equal!\00"
@var_8 = constant [19 x i8] c"shouldn't happen..\00"
@var_13 = constant [9 x i8] c"smaller!\00"
@var_15 = constant [17 x i8] c"shouldn't happen\00"
@var_25 = constant [20 x i8] c"short circuit works\00"
@var_36 = constant [32 x i8] c"wrong but at least didn't crash\00"
@var_44 = constant [5 x i8] c"good\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3 = add i32 100, 0
%var_4 = add i32 100, 0
%var_5 = icmp eq i32 %var_3, %var_4
br i1 %var_5, label %label_0, label %label_1
br label %label_0
label_0:
%var_6.ptr = getelementptr [7 x i8], [7 x i8]* @var_6, i32 0, i32 0
call void @print(i8* %var_6.ptr)
br label %label_2
br label %label_1
label_1:
%var_8.ptr = getelementptr [19 x i8], [19 x i8]* @var_8, i32 0, i32 0
call void @print(i8* %var_8.ptr)
br label %label_2
label_2:
%var_10 = add i32 5, 0
%var_11 = add i32 6, 0
%var_12 = icmp slt i32 %var_10, %var_11
br i1 %var_12, label %label_3, label %label_4
br label %label_3
label_3:
%var_13.ptr = getelementptr [9 x i8], [9 x i8]* @var_13, i32 0, i32 0
call void @print(i8* %var_13.ptr)
br label %label_5
br label %label_4
label_4:
%var_15.ptr = getelementptr [17 x i8], [17 x i8]* @var_15, i32 0, i32 0
call void @print(i8* %var_15.ptr)
br label %label_5
label_5:
%var_17 = add i32 4, 0
%var_18 = add i32 5, 0
%var_19 = icmp sle i32 %var_17, %var_18
br i1 %var_19, label %label_7, label %label_6
br label %label_6
label_6:
%var_20 = add i32 8, 0
%var_21 = add i32 0, 0
call void @check_division(i32 %var_21)
%var_22 = sdiv i32 %var_20, %var_21
%var_23 = add i32 10, 0
%var_24 = icmp slt i32 %var_22, %var_23
br i1 %var_24, label %label_7, label %label_8
br label %label_7
label_7:
%var_25.ptr = getelementptr [20 x i8], [20 x i8]* @var_25, i32 0, i32 0
call void @print(i8* %var_25.ptr)
br label %label_8
label_8:
%var_27 = add i32 5, 0
%var_28 = add i32 100, 0
%var_29 = icmp sgt i32 %var_27, %var_28
br i1 %var_29, label %label_9, label %label_11
br label %label_9
label_9:
%var_30 = add i32 6, 0
%var_31 = add i32 0, 0
call void @check_division(i32 %var_31)
%var_32 = udiv i32 %var_30, %var_31
%var_33 = and i32 255, %var_32
%var_34 = add i32 1, 0
%var_35 = icmp ne i32 %var_33, %var_34
br i1 %var_35, label %label_10, label %label_11
br label %label_10
label_10:
%var_36.ptr = getelementptr [32 x i8], [32 x i8]* @var_36, i32 0, i32 0
call void @print(i8* %var_36.ptr)
br label %label_11
label_11:
%var_38 = add i32 1, 0
%var_39 = add i32 1, 0
%var_40 = icmp ne i32 %var_38, %var_39
br i1 %var_40, label %label_14, label %label_12
br label %label_12
label_12:
%var_41 = add i32 8, 0
%var_42 = add i32 2, 0
%var_43 = icmp sge i32 %var_41, %var_42
br i1 %var_43, label %label_13, label %label_14
br label %label_13
label_13:
%var_44.ptr = getelementptr [5 x i8], [5 x i8]* @var_44, i32 0, i32 0
call void @print(i8* %var_44.ptr)
br label %label_14
label_14:
ret void }
