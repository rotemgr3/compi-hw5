@var_3 = constant [11 x i8] c"Print this\00"
@var_7 = constant [16 x i8] c"Dont print this\00"
@var_14 = constant [7 x i8] c"10 > x\00"
@var_42 = constant [16 x i8] c"While block end\00"
@var_44 = constant [15 x i8] c"y should be 90\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @foo(){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [11 x i8], [11 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
%var_5 = add i32 10, 0
ret i32 10
ret i32 0 }
define i32 @fooNot(){
%var_6 = alloca i32, i32 50
%var_7.ptr = getelementptr [16 x i8], [16 x i8]* @var_7, i32 0, i32 0
call void @print(i8* %var_7.ptr)
%var_9 = add i32 10, 0
ret i32 10
ret i32 0 }
define void @callFoos_int_int(i32, i32){
%var_10 = alloca i32, i32 50
%var_11 = getelementptr i32, i32* %var_10, i32 0
store i32 %1, i32* %var_11
%var_12 = call  i32 @foo()
%var_13 = icmp sgt i32 %var_12, %0
br i1 %var_13, label %label_0, label %label_1
br label %label_0
label_0:
%var_14.ptr = getelementptr [7 x i8], [7 x i8]* @var_14, i32 0, i32 0
call void @print(i8* %var_14.ptr)
br label %label_1
label_1:
br label %label_2
label_2:
%var_16 = getelementptr i32, i32* %var_10, i32 0
%var_17 = load i32, i32* %var_16
%var_18 = add i32 5, 0
%var_19 = icmp sgt i32 %var_17, %var_18
br i1 %var_19, label %label_4, label %label_3
br label %label_3
label_3:
%var_20 = call  i32 @fooNot()
%var_21 = add i32 100, 0
%var_22 = icmp sgt i32 %var_20, %var_21
br i1 %var_22, label %label_4, label %label_9
br label %label_4
label_4:
%var_23 = getelementptr i32, i32* %var_10, i32 0
%var_24 = load i32, i32* %var_23
%var_25 = add i32 20, 0
%var_26 = icmp sgt i32 %var_24, %var_25
br i1 %var_26, label %label_5, label %label_8
br label %label_5
label_5:
%var_27 = getelementptr i32, i32* %var_10, i32 0
%var_28 = load i32, i32* %var_27
%var_29 = add i32 5, 0
%var_30 = sub i32 %var_28, %var_29
%var_31 = getelementptr i32, i32* %var_10, i32 0
store i32 %var_30, i32* %var_31
%var_32 = getelementptr i32, i32* %var_10, i32 0
%var_33 = load i32, i32* %var_32
%var_34 = add i32 90, 0
%var_35 = icmp eq i32 %var_33, %var_34
br i1 %var_35, label %label_6, label %label_7
br label %label_6
label_6:
br label %label_9
br label %label_7
label_7:
br label %label_2
br label %label_8
label_8:
%var_36 = getelementptr i32, i32* %var_10, i32 0
%var_37 = load i32, i32* %var_36
%var_38 = add i32 1, 0
%var_39 = sub i32 %var_37, %var_38
%var_40 = getelementptr i32, i32* %var_10, i32 0
store i32 %var_39, i32* %var_40
%var_41 = call  i32 @fooNot()
br label %label_2
br label %label_9
label_9:
%var_42.ptr = getelementptr [16 x i8], [16 x i8]* @var_42, i32 0, i32 0
call void @print(i8* %var_42.ptr)
%var_44.ptr = getelementptr [15 x i8], [15 x i8]* @var_44, i32 0, i32 0
call void @print(i8* %var_44.ptr)
%var_46 = getelementptr i32, i32* %var_10, i32 0
%var_47 = load i32, i32* %var_46
call void @printi(i32 %var_47)
ret void }
define void @main(){
%var_49 = alloca i32, i32 50
%var_50 = add i32 100, 0
%var_51 = getelementptr i32, i32* %var_49, i32 0
store i32 %var_50, i32* %var_51
%var_52 = add i32 5, 0
%var_53 = getelementptr i32, i32* %var_49, i32 0
%var_54 = load i32, i32* %var_53
call void @callFoos_int_int(i32 %var_52, i32 %var_54)
ret void }
