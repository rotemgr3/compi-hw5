@var_8 = constant [43 x i8] c"Happiness exists for those who wish for it\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define void @maxTestsTestBooleansBasic(){
%var_2 = alloca i32, i32 50
br label %label_1
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_4 = phi i32 [ 1, %label_0], [0, %label_1]
%var_5 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_4, i32* %var_5
br label %label_3
br label %label_3
label_3:
br label %label_5
label_4:
br label %label_5
label_5:
%var_6 = phi i32 [ 1, %label_3], [0, %label_4]
%var_7 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_6, i32* %var_7
br label %label_6
br label %label_6
label_6:
%var_8.ptr = getelementptr [43 x i8], [43 x i8]* @var_8, i32 0, i32 0
call void @print(i8* %var_8.ptr)
br label %label_7
label_7:
ret void }
define void @main(){
%var_10 = alloca i32, i32 50
call void @maxTestsTestBooleansBasic()
ret void }
