@var_3 = constant [21 x i8] c"anotha while for you\00"
@var_19 = constant [14 x i8] c"OK youre good\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [21 x i8], [21 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
%var_5 = add i32 0, 0
%var_6 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_5, i32* %var_6
br label %label_31
label_31:
%var_7 = getelementptr i32, i32* %var_2, i32 0
%var_8 = load i32, i32* %var_7
%var_9 = add i32 2, 0
%var_10 = icmp slt i32 %var_8, %var_9
br i1 %var_10, label %label_38, label %label_50
br label %label_38
label_38:
%var_11 = getelementptr i32, i32* %var_2, i32 0
%var_12 = load i32, i32* %var_11
call void @printi(i32 %var_12)
%var_14 = getelementptr i32, i32* %var_2, i32 0
%var_15 = load i32, i32* %var_14
%var_16 = add i32 1, 0
%var_17 = add i32 %var_15, %var_16
%var_18 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_17, i32* %var_18
br label %label_31
br label %label_50
label_50:
%var_19.ptr = getelementptr [14 x i8], [14 x i8]* @var_19, i32 0, i32 0
call void @print(i8* %var_19.ptr)
ret void
ret void }
