@var_3 = constant [17 x i8] c"MORE while tests\00"
@var_5 = constant [63 x i8] c"will be calculating x + 1 in each iteration starting from x= 0\00"
@var_13 = constant [7 x i8] c"x is: \00"
@var_35 = constant [13 x i8] c"You are good\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [17 x i8], [17 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
%var_5.ptr = getelementptr [63 x i8], [63 x i8]* @var_5, i32 0, i32 0
call void @print(i8* %var_5.ptr)
%var_7 = add i32 0, 0
%var_8 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_7, i32* %var_8
br label %label_0
label_0:
%var_9 = getelementptr i32, i32* %var_2, i32 0
%var_10 = load i32, i32* %var_9
%var_11 = add i32 23, 0
%var_12 = icmp slt i32 %var_10, %var_11
br i1 %var_12, label %label_2, label %label_1
br label %label_1
label_1:
br label %label_3
br label %label_2
label_2:
%var_13.ptr = getelementptr [7 x i8], [7 x i8]* @var_13, i32 0, i32 0
call void @print(i8* %var_13.ptr)
%var_15 = getelementptr i32, i32* %var_2, i32 0
%var_16 = load i32, i32* %var_15
call void @printi(i32 %var_16)
%var_18 = getelementptr i32, i32* %var_2, i32 0
%var_19 = load i32, i32* %var_18
%var_20 = add i32 1, 0
%var_21 = add i32 %var_19, %var_20
%var_22 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_21, i32* %var_22
br label %label_0
%var_23 = getelementptr i32, i32* %var_2, i32 0
%var_24 = load i32, i32* %var_23
%var_25 = getelementptr i32, i32* %var_2, i32 0
%var_26 = load i32, i32* %var_25
%var_27 = sub i32 %var_24, %var_26
%var_28 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_27, i32* %var_28
%var_29 = getelementptr i32, i32* %var_2, i32 1
%var_30 = load i32, i32* %var_29
%var_31 = getelementptr i32, i32* %var_2, i32 1
%var_32 = load i32, i32* %var_31
call void @check_division(i32 %var_32)
%var_33 = sdiv i32 %var_30, %var_32
%var_34 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_33, i32* %var_34
br label %label_0
br label %label_3
label_3:
%var_35.ptr = getelementptr [13 x i8], [13 x i8]* @var_35, i32 0, i32 0
call void @print(i8* %var_35.ptr)
ret void }
