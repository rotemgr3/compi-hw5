@var_3 = constant [40 x i8] c"Hey, I got one more IDK test for you <3\00"
@var_5 = constant [29 x i8] c"Should fin immidieijiajietly\00"
@var_13 = constant [4 x i8] c"Fin\00"
@var_17 = constant [10 x i8] c"Fin again\00"
@var_19 = constant [16 x i8] c"Fin again again\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [40 x i8], [40 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
%var_5.ptr = getelementptr [29 x i8], [29 x i8]* @var_5, i32 0, i32 0
call void @print(i8* %var_5.ptr)
%var_7 = add i32 2, 0
%var_8 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_7, i32* %var_8
%var_9 = getelementptr i32, i32* %var_2, i32 0
%var_10 = load i32, i32* %var_9
%var_11 = add i32 7, 0
%var_12 = icmp slt i32 %var_10, %var_11
br i1 %var_12, label %label_0, label %label_1
br label %label_0
label_0:
%var_13.ptr = getelementptr [4 x i8], [4 x i8]* @var_13, i32 0, i32 0
call void @print(i8* %var_13.ptr)
ret void
br label %label_2
br label %label_1
label_1:
%var_15 = add i32 0, 0
%var_16 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_15, i32* %var_16
br label %label_2
label_2:
%var_17.ptr = getelementptr [10 x i8], [10 x i8]* @var_17, i32 0, i32 0
call void @print(i8* %var_17.ptr)
ret void
%var_19.ptr = getelementptr [16 x i8], [16 x i8]* @var_19, i32 0, i32 0
call void @print(i8* %var_19.ptr)
ret void }
