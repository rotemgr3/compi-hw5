@var_3 = constant [11 x i8] c"got param:\00"
@var_10 = constant [13 x i8] c"Expecting 39\00"
@var_15 = constant [15 x i8] c"actual result:\00"
@var_20 = constant [5 x i8] c"done\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @advancedFunc_int(i32){
%var_2 = alloca i32, i32 50
%var_3.ptr = getelementptr [11 x i8], [11 x i8]* @var_3, i32 0, i32 0
call void @print(i8* %var_3.ptr)
call void @printi(i32 %0)
%var_6 = and i32 255, %0
ret i32 %var_6
ret i32 0 }
define i32 @getTrue(){
%var_7 = alloca i32, i32 50
br label %label_0
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_8 = phi i32 [ 1, %label_0], [0, %label_1]
ret i32 %var_8
ret i32 0 }
define void @main(){
%var_9 = alloca i32, i32 50
%var_10.ptr = getelementptr [13 x i8], [13 x i8]* @var_10, i32 0, i32 0
call void @print(i8* %var_10.ptr)
%var_12 = add i32 39, 0
%var_13 = call  i32 @advancedFunc_int(i32 %var_12)
%var_14 = getelementptr i32, i32* %var_9, i32 0
store i32 %var_13, i32* %var_14
%var_15.ptr = getelementptr [15 x i8], [15 x i8]* @var_15, i32 0, i32 0
call void @print(i8* %var_15.ptr)
%var_17 = getelementptr i32, i32* %var_9, i32 0
%var_18 = load i32, i32* %var_17
call void @printi(i32 %var_18)
%var_20.ptr = getelementptr [5 x i8], [5 x i8]* @var_20, i32 0, i32 0
call void @print(i8* %var_20.ptr)
ret void }
