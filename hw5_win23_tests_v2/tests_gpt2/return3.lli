@var_18 = constant [17 x i8] c"I heart Compi...\00"
@var_21 = constant [5 x i8] c"NOT!\00"
@var_24 = constant [17 x i8] c"I heart Compi...\00"
@var_27 = constant [5 x i8] c"NOT!\00"
@var_30 = constant [17 x i8] c"I heart Compi...\00"
@var_33 = constant [5 x i8] c"NOT!\00"
@var_35 = constant [13 x i8] c"I really do!\00"
@var_38 = constant [19 x i8] c"max of 3 and 2 is \00"
@var_44 = constant [21 x i8] c"max of 3b and 2b is \00"
@var_50 = constant [27 x i8] c"Is 3 really bigger then 2?\00"
@var_56 = constant [5 x i8] c"yes!\00"
@var_58 = constant [4 x i8] c"no!\00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @max_int_int(i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = icmp sge i32 %0, %1
br i1 %var_3, label %label_28, label %label_31
br label %label_28
label_28:
ret i32 %0
br label %label_31
label_31:
ret i32 %1
%var_4 = add i32 42, 0
%var_5 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_4, i32* %var_5
%var_6 = add i32 42, 0
ret i32 42
ret i32 0 }
define i32 @maxb_byte_byte(i32, i32){
%var_7 = alloca i32, i32 50
%var_8 = icmp slt i32 %0, %1
br i1 %var_8, label %label_44, label %label_50
br label %label_44
label_44:
%var_9 = add i32 0, 0
%var_10 = getelementptr i32, i32* %var_7, i32 0
store i32 %var_9, i32* %var_10
br label %label_53
br label %label_50
label_50:
ret i32 %0
br label %label_53
label_53:
ret i32 %1
ret i32 0 }
define i32 @isFirstBigger_int_int(i32, i32){
%var_11 = alloca i32, i32 50
%var_12 = icmp sge i32 %0, %1
br i1 %var_12, label %label_61, label %label_91
br label %label_61
label_61:
%var_13 = icmp ne i32 %0, %1
br i1 %var_13, label %label_65, label %label_77
br label %label_65
label_65:
br label %label_0
br label %label_0
label_0:
br label %label_2
label_1:
br label %label_2
label_2:
%var_14 = phi i32 [ 1, %label_0], [0, %label_1]
ret i32 %var_14
br label %label_88
br label %label_77
label_77:
br label %label_4
br label %label_3
label_3:
br label %label_5
label_4:
br label %label_5
label_5:
%var_15 = phi i32 [ 1, %label_3], [0, %label_4]
ret i32 %var_15
br label %label_88
label_88:
br label %label_102
br label %label_91
label_91:
br label %label_7
br label %label_6
label_6:
br label %label_8
label_7:
br label %label_8
label_8:
%var_16 = phi i32 [ 1, %label_6], [0, %label_7]
ret i32 %var_16
br label %label_102
label_102:
ret i32 0 }
define void @printStatement_bool(i32){
%var_17 = alloca i32, i32 50
%var_18.ptr = getelementptr [17 x i8], [17 x i8]* @var_18, i32 0, i32 0
call void @print(i8* %var_18.ptr)
%var_20 = icmp eq i32 0, %0
br i1 %var_20, label %label_111, label %label_114
br label %label_111
label_111:
ret void
br label %label_114
label_114:
%var_21.ptr = getelementptr [5 x i8], [5 x i8]* @var_21, i32 0, i32 0
call void @print(i8* %var_21.ptr)
ret void }
define void @printStatement2_bool(i32){
%var_23 = alloca i32, i32 50
%var_24.ptr = getelementptr [17 x i8], [17 x i8]* @var_24, i32 0, i32 0
call void @print(i8* %var_24.ptr)
%var_26 = icmp eq i32 0, %0
br i1 %var_26, label %label_130, label %label_125
br label %label_125
label_125:
%var_27.ptr = getelementptr [5 x i8], [5 x i8]* @var_27, i32 0, i32 0
call void @print(i8* %var_27.ptr)
br label %label_133
br label %label_130
label_130:
ret void
br label %label_133
label_133:
ret void }
define void @printStatement3_bool(i32){
%var_29 = alloca i32, i32 50
%var_30.ptr = getelementptr [17 x i8], [17 x i8]* @var_30, i32 0, i32 0
call void @print(i8* %var_30.ptr)
%var_32 = icmp eq i32 0, %0
br i1 %var_32, label %label_148, label %label_142
br label %label_142
label_142:
%var_33.ptr = getelementptr [5 x i8], [5 x i8]* @var_33, i32 0, i32 0
call void @print(i8* %var_33.ptr)
ret void
br label %label_151
br label %label_148
label_148:
ret void
br label %label_151
label_151:
%var_35.ptr = getelementptr [13 x i8], [13 x i8]* @var_35, i32 0, i32 0
call void @print(i8* %var_35.ptr)
ret void }
define void @main(){
%var_37 = alloca i32, i32 50
%var_38.ptr = getelementptr [19 x i8], [19 x i8]* @var_38, i32 0, i32 0
call void @print(i8* %var_38.ptr)
%var_40 = add i32 3, 0
%var_41 = add i32 2, 0
%var_42 = call  i32 @max_int_int(i32 %var_40, i32 %var_41)
call void @printi(i32 %var_42)
%var_44.ptr = getelementptr [21 x i8], [21 x i8]* @var_44, i32 0, i32 0
call void @print(i8* %var_44.ptr)
%var_46 = add i32 3, 0
%var_47 = add i32 2, 0
%var_48 = call  i32 @maxb_byte_byte(i32 %var_46, i32 %var_47)
call void @printi(i32 %var_48)
%var_50.ptr = getelementptr [27 x i8], [27 x i8]* @var_50, i32 0, i32 0
call void @print(i8* %var_50.ptr)
%var_52 = add i32 3, 0
%var_53 = add i32 2, 0
%var_54 = call i32 @isFirstBigger_int_int(i32 %var_52, i32 %var_53)
%var_55 = icmp eq i32 0, %var_54
br i1 %var_55, label %label_182, label %label_177
br label %label_177
label_177:
%var_56.ptr = getelementptr [5 x i8], [5 x i8]* @var_56, i32 0, i32 0
call void @print(i8* %var_56.ptr)
br label %label_186
br label %label_182
label_182:
%var_58.ptr = getelementptr [4 x i8], [4 x i8]* @var_58, i32 0, i32 0
call void @print(i8* %var_58.ptr)
br label %label_186
label_186:
br label %label_10
br label %label_9
label_9:
br label %label_11
label_10:
br label %label_11
label_11:
%var_60 = phi i32 [ 1, %label_9], [0, %label_10]
call void @printStatement_bool(i32 %var_60)
br label %label_13
br label %label_12
label_12:
br label %label_14
label_13:
br label %label_14
label_14:
%var_62 = phi i32 [ 1, %label_12], [0, %label_13]
call void @printStatement2_bool(i32 %var_62)
br label %label_15
br label %label_15
label_15:
br label %label_17
label_16:
br label %label_17
label_17:
%var_64 = phi i32 [ 1, %label_15], [0, %label_16]
call void @printStatement3_bool(i32 %var_64)
ret void }
