@var_21 = constant [8 x i8] c"Res is \00"
@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @factorial_int(i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 1, 0
%var_4 = icmp eq i32 %0, %var_3
br i1 %var_4, label %label_29, label %label_34
br label %label_29
label_29:
%var_5 = add i32 1, 0
ret i32 1
br label %label_41
br label %label_34
label_34:
%var_6 = add i32 1, 0
%var_7 = sub i32 %0, %var_6
%var_8 = call  i32 @factorial_int(i32 %var_7)
%var_9 = mul i32 %0, %var_8
ret i32 %var_9
br label %label_41
label_41:
ret i32 0 }
define i32 @bfactorial_byte(i32){
%var_10 = alloca i32, i32 50
%var_11 = add i32 1, 0
%var_12 = icmp eq i32 %0, %var_11
br i1 %var_12, label %label_49, label %label_54
br label %label_49
label_49:
%var_13 = add i32 1, 0
ret i32 1
br label %label_63
br label %label_54
label_54:
%var_14 = add i32 1, 0
%var_15 = sub i32 %0, %var_14
%var_16 = and i32 255, %var_15
%var_17 = call  i32 @bfactorial_byte(i32 %var_16)
%var_18 = mul i32 %0, %var_17
%var_19 = and i32 255, %var_18
ret i32 %var_19
br label %label_63
label_63:
ret i32 0 }
define void @main(){
%var_20 = alloca i32, i32 50
%var_21.ptr = getelementptr [8 x i8], [8 x i8]* @var_21, i32 0, i32 0
call void @print(i8* %var_21.ptr)
%var_23 = add i32 5, 0
%var_24 = call  i32 @factorial_int(i32 %var_23)
%var_25 = add i32 5, 0
%var_26 = call  i32 @bfactorial_byte(i32 %var_25)
%var_27 = add i32 %var_24, %var_26
call void @printi(i32 %var_27)
ret void }
