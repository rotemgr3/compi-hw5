@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define i32 @safedivgt_int_int_int(i32, i32, i32){
%var_2 = alloca i32, i32 50
%var_3 = add i32 0, 0
%var_4 = icmp ne i32 %1, %var_3
br i1 %var_4, label %label_0, label %label_2
br label %label_0
label_0:
call void @check_division(i32 %1)
%var_5 = sdiv i32 %0, %1
%var_6 = icmp sgt i32 %var_5, %2
br i1 %var_6, label %label_1, label %label_2
br label %label_1
label_1:
%var_7 = add i32 1, 0
ret i32 1
br label %label_2
label_2:
%var_8 = add i32 0, 0
ret i32 0
ret i32 0 }
define void @main(){
%var_9 = alloca i32, i32 50
%var_10 = add i32 120, 0
%var_11 = add i32 4, 0
%var_12 = add i32 28, 0
%var_13 = call  i32 @safedivgt_int_int_int(i32 %var_10, i32 %var_11, i32 %var_12)
call void @printi(i32 %var_13)
%var_15 = add i32 120, 0
%var_16 = add i32 4, 0
%var_17 = add i32 32, 0
%var_18 = call  i32 @safedivgt_int_int_int(i32 %var_15, i32 %var_16, i32 %var_17)
call void @printi(i32 %var_18)
%var_20 = add i32 120, 0
%var_21 = add i32 0, 0
%var_22 = add i32 32, 0
%var_23 = call  i32 @safedivgt_int_int_int(i32 %var_20, i32 %var_21, i32 %var_22)
call void @printi(i32 %var_23)
%var_25 = add i32 120, 0
%var_26 = add i32 1, 0
%var_27 = add i32 32, 0
%var_28 = call  i32 @safedivgt_int_int_int(i32 %var_25, i32 %var_26, i32 %var_27)
call void @printi(i32 %var_28)
ret void }
