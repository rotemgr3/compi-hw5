@.division_zero_error_str = internal constant [23 x i8] c"Error division by zero\00"
define void @check_division(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print(i8* getelementptr([23 x i8], [23 x i8]* @.division_zero_error_str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print(i8*){
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi(i32){
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0)
ret void
}
define void @main(){
%var_2 = alloca i32, i32 50
%var_3 = add i32 0, 0
%var_4 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_3, i32* %var_4
%var_5 = add i32 0, 0
%var_6 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_5, i32* %var_6
%var_7 = getelementptr i32, i32* %var_2, i32 0
%var_8 = load i32, i32* %var_7
%var_9 = getelementptr i32, i32* %var_2, i32 1
%var_10 = load i32, i32* %var_9
%var_11 = add i32 %var_8, %var_10
call void @printi(i32 %var_11)
%var_13 = getelementptr i32, i32* %var_2, i32 0
%var_14 = load i32, i32* %var_13
%var_15 = add i32 2, 0
%var_16 = mul i32 %var_14, %var_15
call void @printi(i32 %var_16)
%var_18 = getelementptr i32, i32* %var_2, i32 1
%var_19 = load i32, i32* %var_18
%var_20 = add i32 2, 0
%var_21 = mul i32 %var_19, %var_20
call void @printi(i32 %var_21)
%var_23 = add i32 255, 0
%var_24 = add i32 2, 0
%var_25 = mul i32 %var_23, %var_24
call void @printi(i32 %var_25)
%var_27 = add i32 255, 0
%var_28 = add i32 2, 0
%var_29 = mul i32 %var_27, %var_28
call void @printi(i32 %var_29)
%var_31 = add i32 255, 0
%var_32 = add i32 255, 0
%var_33 = add i32 %var_31, %var_32
call void @printi(i32 %var_33)
%var_35 = add i32 255, 0
%var_36 = add i32 255, 0
%var_37 = add i32 %var_35, %var_36
call void @printi(i32 %var_37)
%var_39 = add i32 255, 0
%var_40 = add i32 255, 0
%var_41 = sub i32 %var_39, %var_40
call void @printi(i32 %var_41)
%var_43 = add i32 255, 0
%var_44 = add i32 255, 0
%var_45 = sub i32 %var_43, %var_44
call void @printi(i32 %var_45)
%var_47 = getelementptr i32, i32* %var_2, i32 0
%var_48 = load i32, i32* %var_47
%var_49 = add i32 1, 0
call void @check_division(i32 %var_49)
%var_50 = sdiv i32 %var_48, %var_49
call void @printi(i32 %var_50)
%var_52 = getelementptr i32, i32* %var_2, i32 1
%var_53 = load i32, i32* %var_52
%var_54 = add i32 1, 0
call void @check_division(i32 %var_54)
%var_55 = sdiv i32 %var_53, %var_54
call void @printi(i32 %var_55)
%var_57 = add i32 8, 0
%var_58 = add i32 2, 0
call void @check_division(i32 %var_58)
%var_59 = sdiv i32 %var_57, %var_58
call void @printi(i32 %var_59)
%var_61 = add i32 10, 0
%var_62 = add i32 4, 0
call void @check_division(i32 %var_62)
%var_63 = sdiv i32 %var_61, %var_62
call void @printi(i32 %var_63)
%var_65 = getelementptr i32, i32* %var_2, i32 0
%var_66 = load i32, i32* %var_65
%var_67 = getelementptr i32, i32* %var_2, i32 0
%var_68 = load i32, i32* %var_67
call void @check_division(i32 %var_68)
%var_69 = sdiv i32 %var_66, %var_68
call void @printi(i32 %var_69)
ret void
ret void }
